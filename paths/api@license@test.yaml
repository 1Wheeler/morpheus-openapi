post:
  tags:
    - License
  summary: testLicense
  description: >-
    This endpoint can be used to decode a license to see if it is valid and
    inspect the license settings, such as who it belongs to and the enabled
    features. This is only a test, it does not install the key, or make any
    changes to your appliance.
  operationId: testLicense
  parameters: []
  requestBody:
    description: ''
    content:
      application/json:
        schema:
          $ref: ..\components\schemas\ApiLicenseTestRequest.yaml
    required: false
  responses:
    '200':
      description: License test succeeded, the license details are returned
      headers: {}
      content:
        application/json:
          schema:
            $ref: ..\components\schemas\license.yaml
          examples:
            Successful Test License Response:
              summary: License Response
              value:
                license:
                  productTier: enterprise
                  startDate: '2021-10-07T00:00:00Z'
                  endDate: '2022-10-07T00:00:00Z'
                  maxInstances: 5000
                  maxMemory: 0
                  maxStorage: 0
                  hardLimit: false
                  freeTrial: false
                  multiTenant: true
                  whitelabel: true
                  reportStatus: true
                  supportLevel: standard
                  accountName: Morpheus
                  config: {}
                  amazonProductCodes: 'null'
                  features:
                    dashboard: true
                    guidance: true
                    discovery: true
                    analytics: true
                    scheduling: true
                    approvals: true
                    usage: true
                    activity: true
                    instances: true
                    apps: true
                    templates: true
                    automation: true
                    virtualImages: true
                    library: true
                    migrations: true
                    deployments: true
                    groups: true
                    clouds: true
                    hosts: true
                    network: true
                    loadBalancers: true
                    storage: true
                    keyPairs: true
                    sslCertificates: true
                    boot: true
                    backups: true
                    cypher: true
                    archives: true
                    imageBuilder: true
                    tenants: true
                    plans: true
                    pricing: true
                    users: true
                    userGroups: true
                    monitoring: true
                    logging: true
                    monitoringServices: true
                    loggingServices: true
                    backupServices: true
                    dnsServices: true
                    codeService: true
                    buildServices: true
                    loadBalancerServices: true
                    ipamServices: true
                    approvalServices: true
                    cmdbServices: true
                    deploymentServices: true
                    automationServices: true
                    serviceDiscoveryServices: true
                    identityServices: true
                    trustServices: true
                    securityServices: true
                  zoneTypes: 'null'
                  lastUpdated: '2021-10-07T14:36:08Z'
                  dateCreated: '2021-10-07T14:36:08Z'
                currentUsage:
                  memory: 531366034976
                  storage: 6017299099648
                  workloads: 631
    '400':
      description: License test failed
      headers: {}
      content:
        application/json:
          schema:
            $ref: ..\components\schemas\Error.yaml
          example:
            success: false
            msg: Unable to decode license content
    '401':
      description: Unauthorized.
      headers: {}
      content: {}
    '403':
      description: Forbidden.
      headers: {}
      content: {}
    '404':
      description: Object Not Found.
      headers: {}
      content: {}
    '500':
      description: Internal Server Error.
      headers: {}
      content: {}
    '503':
      description: Service Unavailable.
      headers: {}
      content: {}
  deprecated: false
parameters: []
