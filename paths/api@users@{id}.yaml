get:
  tags:
    - Users
  summary: getUsers
  description: Get details about a specific user.
  operationId: getUsers
  parameters:
    - name: id
      in: path
      description: Morpheus ID of the Object being created or referenced
      required: true
      style: simple
      schema:
        type: number
        contentEncoding: double
  responses:
    '200':
      description: User Object
      headers: {}
      content:
        application/json:
          schema:
            $ref: ..\components\schemas\200User.yaml
          examples:
            Get User Response:
              summary: User Response
              value:
                user:
                  id: 4
                  accountId: 3
                  username: ahicks
                  displayName: Adam Hicks
                  email: ahicks@morpheusdata.com
                  firstName: Adam
                  lastName: Hicks
                  enabled: false
                  receiveNotifications: true
                  isUsing2FA: false
                  accountExpired: false
                  accountLocked: false
                  passwordExpired: false
                  loginCount: 1576
                  loginAttempts: 0
                  lastLoginDate: '2021-08-17T17:12:08Z'
                  roles:
                    - id: 16
                      authority: Morpheus Admin
                      description: Morpheus Administrator Role
                  account:
                    id: 3
                    name: Morpheus
                  linuxUsername: ahicks
                  linuxPassword: '************'
                  linuxKeyPairId: 13
                  windowsUsername: ahicks
                  windowsPassword: '************'
                  defaultPersona: 'null'
                  dateCreated: '2017-02-17T06:47:17Z'
                  lastUpdated: '2021-08-26T18:58:09Z'
    '400':
      description: Bad Request.
      headers: {}
      content: {}
    '401':
      description: Unauthorized.
      headers: {}
      content: {}
    '403':
      description: Forbidden.
      headers: {}
      content: {}
    '404':
      description: Object Not Found.
      headers: {}
      content: {}
    '500':
      description: Internal Server Error.
      headers: {}
      content: {}
    '503':
      description: Service Unavailable.
      headers: {}
      content: {}
  deprecated: false
put:
  tags:
    - Users
  summary: updateUser
  description: Update an existing user.
  operationId: updateUser
  parameters:
    - name: id
      in: path
      description: Morpheus ID of the Object being created or referenced
      required: true
      style: simple
      schema:
        type: number
        contentEncoding: double
  requestBody:
    description: ''
    content:
      application/json:
        schema:
          $ref: ..\components\schemas\ApiUsersRequest1.yaml
    required: false
  responses:
    '200':
      description: User Object
      headers: {}
      content:
        application/json:
          schema:
            $ref: ..\components\schemas\200User.yaml
          examples:
            Update User Response:
              summary: User Response
              value:
                user:
                  id: 4
                  accountId: 3
                  username: ahicks
                  displayName: Adam Hicks
                  email: ahicks@morpheusdata.com
                  firstName: Adam
                  lastName: Hicks
                  enabled: false
                  receiveNotifications: true
                  isUsing2FA: false
                  accountExpired: false
                  accountLocked: false
                  passwordExpired: false
                  loginCount: 1576
                  loginAttempts: 0
                  lastLoginDate: '2021-08-17T17:12:08Z'
                  roles:
                    - id: 16
                      authority: Morpheus Admin
                      description: Morpheus Administrator Role
                  account:
                    id: 3
                    name: Morpheus
                  linuxUsername: ahicks
                  linuxPassword: '************'
                  linuxKeyPairId: 13
                  windowsUsername: ahicks
                  windowsPassword: '************'
                  defaultPersona: 'null'
                  dateCreated: '2017-02-17T06:47:17Z'
                  lastUpdated: '2021-08-26T18:58:09Z'
    '400':
      description: Bad Request.
      headers: {}
      content: {}
    '401':
      description: Unauthorized.
      headers: {}
      content: {}
    '403':
      description: Forbidden.
      headers: {}
      content: {}
    '404':
      description: Object Not Found.
      headers: {}
      content: {}
    '500':
      description: Internal Server Error.
      headers: {}
      content: {}
    '503':
      description: Service Unavailable.
      headers: {}
      content: {}
  deprecated: false
delete:
  tags:
    - Users
  summary: deleteUser
  description: Delete an existing user.
  operationId: deleteUser
  parameters:
    - name: id
      in: path
      description: ''
      required: true
      style: simple
      schema:
        type: string
  responses:
    '200':
      description: User was deleted successfully
      headers: {}
      content:
        application/json:
          schema:
            $ref: ..\components\schemas\200Success.yaml
    '400':
      description: Bad Request.
      headers: {}
      content: {}
    '401':
      description: Unauthorized.
      headers: {}
      content: {}
    '403':
      description: Forbidden.
      headers: {}
      content: {}
    '404':
      description: Object Not Found.
      headers: {}
      content: {}
    '500':
      description: Internal Server Error.
      headers: {}
      content: {}
    '503':
      description: Service Unavailable.
      headers: {}
      content: {}
  deprecated: false
parameters: []
