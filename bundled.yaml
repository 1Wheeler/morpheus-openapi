openapi: 3.0.3
info:
  title: Morpheus API
  description: >-
    Morpheus is a powerful cloud management tool that provides provisioning,
    monitoring, logging, backups, and application deployment strategies.


    This document describes the Morpheus API protocol and the available
    endpoints. Sections are organized in the same manner as they appear in the
    Morpheus UI.
  version: 5.4.4
  termsOfService: https://morpheusdata.com/terms-and-conditions/
  contact:
    email: dev@morpheusdata.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://{serverFQDN}
    description: Morpheus API
    variables:
      serverFQDN:
        default: ''
paths:
  /api/accounts:
    get:
      summary: List tenants
      description: Get a list of tenants. A tenant is also referred to as an account.
      operationId: listTenants
      tags:
        - Tenants
      parameters:
        - $ref: '#/components/parameters/phrase'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/direction'
      responses:
        '200':
          description: Array of tenants
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tenant'
                  meta:
                    $ref: '#/components/schemas/MetaObject'
    post:
      summary: Create tenant
      description: >-
        Create a new tenant. This new account will be a sub-tenant with the
        master tenant as its parent.
      operationId: createTenant
      tags:
        - Tenants
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - account
              properties:
                account:
                  type: object
                  description: Payload for creating a new tenant
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      description: Name
                    description:
                      type: string
                      description: Description
                      nullable: true
                    role:
                      type: object
                      description: >-
                        Tenant Base Role. This restricts the access available to
                        this tenant's roles and users.
                      properties:
                        id:
                          type: integer
                          format: int64
                    subdomain:
                      type: string
                      description: >-
                        The subdomain. This will be part of the login URL and
                        username for sub tenant users.
                      nullable: true
                    currency:
                      $ref: '#/components/schemas/CurrencyCode'
      responses:
        '200':
          description: Tenant Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    $ref: '#/components/schemas/Tenant'
  /api/accounts/{id}:
    parameters:
      - $ref: '#/components/parameters/id-path'
    get:
      summary: Get tenant
      description: Get details about a tenant
      operationId: getTenant
      tags:
        - Tenants
      responses:
        '200':
          description: Tenant Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    $ref: '#/components/schemas/Tenant'
    put:
      summary: Update tenant
      description: Update an existing tenant.
      operationId: updateTenant
      tags:
        - Tenants
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - account
              properties:
                account:
                  description: Payload for updating an existing tenant
                  properties:
                    name:
                      type: string
                      description: Name
                    description:
                      type: string
                      description: Description
                      nullable: true
                    role:
                      type: object
                      description: >-
                        Tenant Base Role. This restricts the access available to
                        this tenant's roles and users.
                      properties:
                        id:
                          type: integer
                          format: int64
                    subdomain:
                      type: string
                      description: >-
                        The subdomain. This will be part of the login URL and
                        username for sub tenant users.
                      nullable: true
                    currency:
                      $ref: '#/components/schemas/CurrencyCode'
      responses:
        '200':
          description: Tenant Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    $ref: '#/components/schemas/Tenant'
    delete:
      summary: Delete tenant
      description: >-
        Delete an existing tenant. This deletes everything under the tenant. An
        error will occur if the tenant still has managed resources, unless
        `removeResources=true`.
      operationId: deleteTenant
      tags:
        - Tenants
      parameters:
        - name: removeResources
          in: query
          description: >-
            Remove Resources. This will delete all the managed resources under
            the account instead of erroring.
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Tenant Object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Tenant still has managed resources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                success: false
                msg: >-
                  Unable to delete an account without removing resources when
                  managed instances exist.
  /api/accounts/available-roles:
    get:
      summary: List available roles for a tenant
      description: >-
        Get a list of available roles that can be assigned as the default base
        role for a sub tenant account.
      operationId: listTenantsAvailableRoles
      tags:
        - Tenants
      parameters:
        - name: accountId
          in: query
          description: Tenant ID, find roles for sub tenant account.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Array of roles
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: object
                      description: Available Tenant Role Object
                      properties:
                        id:
                          type: integer
                          format: int64
                        authority:
                          type: string
                          description: A unique name for the role.
              examples:
                ListAvailableUserRoles:
                  $ref: '#/components/examples/ListTenantsAvailableRoles'
  /api/dashboard:
    get:
      summary: Overview of Dashboard information
      description: >
        This endpoint can be used to view dashboard information about the remote
        Morpheus appliance. This is an overview and summary of data available to
        the user that can be used to render a dashboard.
      operationId: dashboard
      tags:
        - Dashboard
      externalDocs:
        url: https://apidocs.morpheusdata.com/#dashboard
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dashboard'
              examples:
                Dashboard Response:
                  $ref: '#/components/examples/dashboard'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
  /api/doc:
    get:
      summary: List documentation links.
      description: >-
        Get a list documentation links. These are links to Morpheus
        documentation and help.
      operationId: doc
      tags:
        - Documentation
      security: []
      responses:
        '200':
          description: Array of documentation links
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        url:
                          type: string
                        description:
                          type: string
                        type:
                          type: string
                          enum:
                            - openapi
                            - external
              examples:
                foobar:
                  $ref: '#/components/examples/ListDocsResponse'
  /api/doc/openapi:
    get:
      summary: Get Morpheus OpenAPI (Swagger) document as JSON.
      description: >-
        Get Morpheus OpenAPI (Swagger) document as JSON. This is the same
        document that you are reading at this very moment.
      operationId: openapi
      tags:
        - Documentation
      security: []
      responses:
        '200':
          description: OpenAPI JSON specification for the Morpheus API
          content:
            application/json:
              examples:
                jsonExample:
                  summary: OpenAPI (Swagger) JSON
                  value:
                    openapi: 3.0.3
                    info:
                      title: Morpheus API
                      description: Welcome ...
  /api/doc/openapi.yaml:
    get:
      summary: Get Morpheus OpenAPI (Swagger) document as YAML.
      description: >-
        Get Morpheus OpenAPI (Swagger) document as YAML. This is the same
        document that you are reading at this very moment.
      operationId: openapiYaml
      tags:
        - Documentation
      security: []
      responses:
        '200':
          description: OpenAPI YAML specification for the Morpheus API
          content:
            text/yaml:
              examples:
                yamlExample:
                  summary: OpenApi (Swagger) YAML
                  value: |
                    openapi: "3.0.3"
                    info: 
                      title: "Morpheus API"
                      description: "Welcome ..."
  /api/forgot/reset-password:
    post:
      summary: Reset user password
      description: >
        This endpoint will reset the password for a user, updating it to the
        specified value. A secret token must be passed to identify the user who
        is being updated.


        **Note**: You can obtain this token by inspecting the URL of the “Click
        here to reset” link seen in the email.
      operationId: resetPassword
      tags:
        - Authentication
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - password
              properties:
                token:
                  description: >-
                    The secret Reset Password token that was included in the
                    **Forgot Password Email**.
                  type: string
                password:
                  description: User new password. This is the new password for your user.
                  type: string
                  format: password
      externalDocs:
        url: https://apidocs.morpheusdata.com/#reset-password
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: Password has been updated and account unlocked
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
  /api/forgot/send-email:
    post:
      summary: Request a reset password email
      description: >
        This endpoint will trigger the Reset your password email to be sent to
        the specified user.


        The User is identified by `username` and, if they exist, will be
        notified via their configured email address. The email notification will
        indicate a Reset Password Request was made and it will include a token.


        Once you obtain the token from the email, it may be used to reset the
        password of your user.


        **Note**: This is an unauthorized endpoint and the response will always
        appear successful, it is not possible determine from the response
        whether the user exists or if an email was sent.
      operationId: forgotPassword
      tags:
        - Authentication
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
              properties:
                username:
                  type: string
                  description: >
                    Specified as "username" or "tenantId\username" with proper
                    HTML encoding and used in conjunction with `password`.
      externalDocs:
        url: https://apidocs.morpheusdata.com/#forgot-password
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: >-
                      Reset password instructions have been sent to the user
                      'jsmith', if they exist.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
  /api/license:
    get:
      summary: Get license
      description: >-
        Get details about the license that is currently installed on the
        appliance. This returns the license details, but not the key itself.
        Your license key will never be returned and should always be kept
        secret.
      operationId: getLicense
      tags:
        - License
      responses:
        '200':
          description: Get details about the currently installed license
          content:
            application/json:
              schema:
                type: object
                properties:
                  license:
                    $ref: '#/components/schemas/License'
                  currentUsage:
                    $ref: '#/components/schemas/CurrentUsage'
              examples:
                getLicense:
                  $ref: '#/components/examples/GetLicenseResponse'
                getLicenseIsNotInstalled:
                  summary: License is not installed
                  value:
                    license: null
                    currentUsage:
                      memory: 26256664064
                      storage: 306786373632
                      workloads: 12
    post:
      summary: Install license key
      description: >-
        Install a new license key. This will potentially change the enabled
        features and capabilities of your Morpheus appliance.
      operationId: installLicense
      tags:
        - License
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - license
              properties:
                license:
                  type: string
                  description: >-
                    License Key. This is a long and unique string of your
                    Morpheus license. License keys can be requested from the
                    [Morpheus Hub](https://morpheushub.com).
            example:
              license: >-
                4704270b94ab7713e8eaca4c82917d27b5b2a1cc95a1818d71b4648c3f821a18a20b78ba9623f8609cbc3712b96fb4c68bbef1880c16a5946a198c1ff6943badef07458898df99b83cddca7bc33e883a54b6025fbd5b8e84d83c419d2ca5b7ec847227b2b63d1ccbcf6a91fcc9dc4e9bd26321166bb04e54983fc858c5c2f7c7893741f435f4921ba33a9778ec714a6a95054a074ff6969dda1b4
      responses:
        '200':
          description: License installed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  license:
                    $ref: '#/components/schemas/License'
                  currentUsage:
                    $ref: '#/components/schemas/CurrentUsage'
              examples:
                installLicense:
                  $ref: '#/components/examples/GetLicenseResponse'
        '400':
          description: License install failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                success: false
                msg: Unable to decode license content
    delete:
      summary: Uninstall license key
      description: >-
        Uninstall your appliance license, leaving the appliance with no license
        installed. This will change the enabled features and capabilities of
        your Morpheus appliance.
      operationId: uninstallLicense
      tags:
        - License
      responses:
        '200':
          description: License uninstalled successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
  /api/license/test:
    post:
      summary: Test license key
      description: >-
        This endpoint can be used to decode a license to see if it is valid and
        inspect the license settings, such as who it belongs to and the enabled
        features. This is only a test, it does not install the key, or make any
        changes to your appliance.
      operationId: testLicense
      tags:
        - License
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - license
              properties:
                license:
                  type: string
                  description: >-
                    License Key. This is a long and unique string of your
                    Morpheus license. License keys can be requested from the
                    [Morpheus Hub](https://morpheushub.com).
            example:
              license: >-
                4704270b94ab7713e8eaca4c82917d27b5b2a1cc95a1818d71b4648c3f821a18a20b78ba9623f8609cbc3712b96fb4c68bbef1880c16a5946a198c1ff6943badef07458898df99b83cddca7bc33e883a54b6025fbd5b8e84d83c419d2ca5b7ec847227b2b63d1ccbcf6a91fcc9dc4e9bd26321166bb04e54983fc858c5c2f7c7893741f435f4921ba33a9778ec714a6a95054a074ff6969dda1b4
      responses:
        '200':
          description: License test succeeded, the license details are returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  license:
                    $ref: '#/components/schemas/License'
              examples:
                testLicense:
                  $ref: '#/components/examples/GetLicenseResponse'
        '400':
          description: License test failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                success: false
                msg: Unable to decode license content
  /api/ping:
    get:
      summary: Basic information about current Morpheus Installation
      description: >
        This endpoint can be used to check the remote appliance build version
        and some other basic information.


        This is an unsecured endpoint and does not require authorization.
        However, build version will not be returned unless you are authenticated
        with a valid access token.
      operationId: ping
      tags:
        - Ping
        - Health
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ping'
              examples:
                Authenticated Ping Response:
                  $ref: '#/components/examples/ping-authenticated'
                Unauthenticated Ping Response:
                  $ref: '#/components/examples/ping-unauthenticated'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
  /api/report-types:
    get:
      summary: This endpoint retrieves all available report types
      description: >
        This endpoint retrieves all available report types. A report type has
        optionTypes that define the parameters available when executing a report
        of that type. The sample response has been abbreviated.
      operationId: reportsGetType
      tags:
        - Reports
      externalDocs:
        url: https://apidocs.morpheusdata.com/#get-all-report-types
      parameters:
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/phrase'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/code'
        - $ref: '#/components/parameters/category'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-reportTypes'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
  /api/reports:
    get:
      summary: Returns all reports
      description: >
        This endpoint returns all reports. This is results of reports that have
        been executed in the past.
      operationId: reportsList
      tags:
        - Reports
      externalDocs:
        url: https://apidocs.morpheusdata.com/#get-all-reports
      parameters:
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/phrase'
        - $ref: '#/components/parameters/name'
        - name: reportType
          in: query
          description: >-
            If specified will return an exact match on report type code, accepts
            multiple values
          schema:
            type: string
        - $ref: '#/components/parameters/category'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-reports'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
    post:
      summary: Run specified report
      description: >
        This endpoint execute the specified report type and create a new report
        result.


        The available parameters vary by report type. Refer to the defined
        `inputs` for each report.
      operationId: reportsRun
      tags:
        - Reports
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - report
              properties:
                report:
                  type: object
                  required:
                    - type
                  properties:
                    type:
                      type: string
                      example: appCost
                    startDate:
                      type: string
                      format: date
                      example: '2019-01-01'
                    endDate:
                      type: string
                      format: date
                      example: '2020-01-01'
                    groupId:
                      description: The Group ID filter for the report
                      type: number
                      example: 1
                    cloudId:
                      description: The Cloud ID filter for the report
                      type: number
                      example: 7
      externalDocs:
        url: https://apidocs.morpheusdata.com/#run-a-report
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-reports'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
  /api/reports/{id}:
    get:
      summary: This endpoint returns a specific report result
      description: >
        This endpoint retrieves a specific report result. The response includes
        the result data as rows which can be used to render the report. Each
        report type will have sections for data and headers that vary by type,
        use Download a Specific Report to get the results organized by section.
      operationId: reportsGet
      tags:
        - Reports
      externalDocs:
        url: https://apidocs.morpheusdata.com/#get-all-reports
      parameters:
        - $ref: '#/components/parameters/id-path'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-reports'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
    delete:
      summary: This endpoint will delete a report result
      description: |
        This endpoint will delete a report result.
      operationId: reportsRemove
      tags:
        - Reports
      externalDocs:
        url: https://apidocs.morpheusdata.com/#delete-a-report
      parameters:
        - $ref: '#/components/parameters/id-path'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-success'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
  /api/reports/download/{id}{format}:
    get:
      summary: Downloads a specific report result as a file attachment
      description: >
        This endpoint downloads a specific report result as a file attachment.
        The default file format is `.json`.
      operationId: reportsDownload
      tags:
        - Reports
      externalDocs:
        url: https://apidocs.morpheusdata.com/#download-a-specific-report
      parameters:
        - $ref: '#/components/parameters/id-path'
        - $ref: '#/components/parameters/format-path'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-success'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
  /api/roles:
    get:
      summary: List roles
      description: Get a list of roles.
      operationId: listRoles
      tags:
        - Roles
      parameters:
        - $ref: '#/components/parameters/phrase'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/direction'
        - name: authority
          in: query
          description: Filter by authority
          schema:
            type: string
        - name: roleType
          in: query
          description: Filter by roleType
          schema:
            type: string
            enum:
              - user
              - account
      responses:
        '200':
          description: Array of roles
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
                  meta:
                    $ref: '#/components/schemas/MetaObject'
              examples:
                ListRolesResponse:
                  $ref: '#/components/examples/ListRolesResponse'
    post:
      summary: Create role
      description: Create a new role.
      operationId: createRole
      tags:
        - Roles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - role
              properties:
                role:
                  type: object
                  description: Payload for creating a new role
                  required:
                    - authority
                  properties:
                    authority:
                      type: string
                      description: Authority (Name)
                    description:
                      type: string
                      description: Description
                      nullable: true
                    roleType:
                      type: string
                      description: Role type
                      enum:
                        - user
                        - account
                      default: user
                    baseRoleId:
                      type: integer
                      format: int64
                      description: >-
                        Base Role ID. Create the new role with the same
                        permissions and access levels that the specified base
                        role has. If this is not passed, the role is create
                        without any permissions.
                    multitenant:
                      type: boolean
                      default: false
                      description: >-
                        Multitenant roles are copied to all tenant accounts and
                        kept in sync until a sub-tenant user modifies their copy
                        of the role. *Only available to master tenant*
                    multitenantLocked:
                      type: boolean
                      default: false
                      description: >-
                        Multitenant Locked, prevents sub-tenant users from
                        modifying their copy of multienant roles. *Only
                        available to master tenant*
            examples:
              CreateRoleRequest:
                $ref: '#/components/examples/CreateRoleRequest'
      responses:
        '200':
          description: Role Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    $ref: '#/components/schemas/Role'
              examples:
                CreateRoleResponse:
                  $ref: '#/components/examples/CreateRoleResponse'
  /api/roles/{id}:
    parameters:
      - $ref: '#/components/parameters/id-path'
    get:
      summary: Get role
      description: Get details about a role
      operationId: getRole
      tags:
        - Roles
      responses:
        '200':
          description: Role Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    $ref: '#/components/schemas/Role'
              examples:
                GetRoleResponse:
                  $ref: '#/components/examples/GetRoleResponse'
    put:
      summary: Update role
      description: Update an existing role.
      operationId: updateRole
      tags:
        - Roles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - role
              properties:
                role:
                  type: object
                  description: Payload for updating an existing role
                  properties:
                    authority:
                      type: string
                      description: Authority (Name)
                    description:
                      type: string
                      description: Description
                      nullable: true
            examples:
              UpdateRoleRequest:
                $ref: '#/components/examples/UpdateRoleRequest'
      responses:
        '200':
          description: Role Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    $ref: '#/components/schemas/Role'
              examples:
                UpdateRoleResponse:
                  $ref: '#/components/examples/UpdateRoleResponse'
    delete:
      summary: Delete role
      description: >-
        Delete an existing role. A role cannot be deleted while it is still in
        use.
      operationId: deleteRole
      tags:
        - Roles
      responses:
        '200':
          description: Role Object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: Role still has managed resources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                roleInUse:
                  summary: Role is assigned to a user or tenant
                  value:
                    success: false
                    msg: >-
                      Role is already in use. Please remove any occurrences of
                      this role before attempting to remove.
                roleInUseByIdentitySource:
                  summary: Role is assigned to an identity source
                  value:
                    success: false
                    msg: >-
                      Role is assigned as a default account role for a
                      configured Identity Source.
  /api/search:
    get:
      summary: Provides global search for all types of objects
      description: >
        This endpoint provides global search for all types of objects, with the
        results sorted in order of relevance.


        The `phrase` parameter can be specified as part of the URL or as a query
        parameter. If phrase is not specified, then 0 results (hits) will be
        returned.
      operationId: search
      tags:
        - Search
      externalDocs:
        url: https://apidocs.morpheusdata.com/#search
      parameters:
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/phrase'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/search'
              examples:
                Search Response:
                  $ref: '#/components/examples/search'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
  /api/setup:
    post:
      summary: Setup appliance
      description: >
        Initialize a freshly installed appliance to create the master tenant and
        System Admin user. 

        Authorization is not required. 

        This operation can only be executed successfully once.
      operationId: setup
      tags:
        - Setup
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - applianceName
                - accountName
                - username
                - email
                - password
              properties:
                applianceName:
                  type: string
                  description: >-
                    Appliance Name. Choose a name for your Morpheus Appliance. 
                    This is stored in the Appliance Settings.
                applianceUrl:
                  type: string
                  description: >-
                    Appliance URL. Specify the full URL for your Morpheus
                    Appliance. This is stored in the Appliance Settings.
                accountName:
                  type: string
                  description: Name of the Master Tenant account being created.
                firstName:
                  type: string
                  description: First Name for the System Admin user being created.
                lastName:
                  type: string
                  description: Last Name for the System Admin user being created.
                username:
                  type: string
                  description: Username for the System Admin user being created.
                email:
                  type: string
                  description: Email for the System Admin user being created.
                password:
                  type: string
                  format: password
                  description: Password for the System Admin user being created.
                hubmode:
                  description: >-
                    Hub Mode. Determines if and how the appliance should connect
                    with the Morpheus Hub. The default value (skip) means do not
                    connect with the hub, and you will be installing your
                    license manually. If you login or register with the hub then
                    a Community Edition license will be installed automatically.
                  type: string
                  enum:
                    - skip
                    - register
                    - login
                  default: skip
                hub:
                  oneOf:
                    - description: >-
                        Object for logging in to the [Morpheus
                        Hub](https://morpheushub.com) with existing credentials.
                        This is only required for `hubmode=login`.
                      type: object
                      properties:
                        email:
                          type: string
                          description: Email for existing Morpheus Hub user
                        password:
                          type: string
                          format: password
                          description: Password for existing Morpheus Hub user
                      example:
                        email: tanderson@mccorp.com
                        password: YourExistingHubPassword
                    - description: >-
                        Object for registering with the [Morpheus
                        Hub](https://morpheushub.com). This is only required for
                        `hubmode=register`.
                      type: object
                      properties:
                        accountName:
                          type: string
                          description: Company Name for new Morpheus Hub organization
                        firstName:
                          type: string
                          description: First Name for new Morpheus Hub user
                        lastName:
                          type: string
                          description: Last Name for new Morpheus Hub user
                        email:
                          type: string
                          description: Email for new Morpheus Hub user
                        password:
                          type: string
                          format: password
                          description: Password for new Morpheus Hub user
                      example:
                        accountName: Meta Cortex Corporation
                        firstName: Thomas
                        lastName: Anderson
                        email: tanderson@mccorp.com
                        username: tanderson
                        password: AGoodPasswordForNewHubAccount
                  discriminator:
                    propertyName: hubmode
                    mapping:
                      login: '#/components/schemas/HubLoginObject'
                      register: '#/components/schemas/HubRegisterObject'
            examples:
              setup:
                summary: Setup appliance
                value:
                  accountName: Meta Cortex Corporation
                  firstName: Thomas
                  lastName: Anderson
                  email: tanderson@mccorp.com
                  username: tanderson
                  password: QnW}cg}8}<~:P9YU
                description: >
                  This example initializes the appliance and without connecting
                  to the [Morpheus Hub](https://morpheushub.com).

                  A license key will need to be installed manually.
              setupWithHubRegistration:
                summary: Setup appliance with Hub Registration
                description: >
                  This example initializes the appliance and connects to the
                  [Morpheus Hub](https://morpheushub.com) to create and register
                  a new hub account. 

                  This automatically retrieves a new Community Edition License
                  from the Hub and installs it in your appliance.
                value:
                  accountName: Meta Cortex Corporation
                  firstName: Thomas
                  lastName: Anderson
                  email: tanderson@mccorp.com
                  username: tanderson
                  password: QnW}cg}8}<~:P9YU
                  hubmode: register
                  hub:
                    accountName: Meta Cortex Corporation
                    firstName: Thomas
                    lastName: Anderson
                    email: tanderson@mccorp.com
                    password: AGoodPasswordForNewHubAccount
              setupWithHubLogin:
                summary: Setup appliance with Hub Login
                description: >
                  This example initializes the appliance and connects to the
                  [Morpheus Hub](https://morpheushub.com) using an existing hub
                  account.

                  This automatically retrieves a new Community Edition License
                  from the Hub and installs it in your appliance.
                value:
                  accountName: Meta Cortex Corporation
                  firstName: Thomas
                  lastName: Anderson
                  email: tanderson@mccorp.com
                  username: tanderson
                  password: QnW}cg}8}<~:P9YU
                  hubmode: login
                  hub:
                    email: tanderson@mccorp.com
                    password: YourExistingHubPassword
      responses:
        '200':
          description: >-
            Appliance setup complete. The master tenant and system admin user
            were created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  buildVersion:
                    type: string
                    description: Morpheus build version that the server is running.
                  applianceUrl:
                    type: string
                    description: >-
                      The Appliance Server URL as defined under Appliance
                      Settings.
                  setupNeeded:
                    type: boolean
                    description: >-
                      Flag to determine if the appliance has been setup, only
                      true when appliance is a fresh install and has not been
                      initialized.
                  hub:
                    type: object
                    description: >-
                      Settings for connecting to the [Morpheus
                      Hub](https://morpheushub.com)
                    properties:
                      enabled:
                        type: boolean
                        description: Flag to determine if hub connectivity is enabled.
                      url:
                        type: string
                        description: The [Morpheus Hub](https://morpheushub.com) URL.
                        default: https://morpheushub.com
                example:
                  success: true
                  buildVersion: 5.4.4.876
                  applianceUrl: https://morpheus.bungebash.com/
                  environment: production
                  setupNeeded: false
        '400':
          description: Appliance has already been setup
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Error'
                  - example:
                      success: false
                      msg: Appliance has already been setup
  /api/users:
    get:
      summary: List users
      description: Get a list of users.
      operationId: listUsers
      tags:
        - Users
      parameters:
        - $ref: '#/components/parameters/phrase'
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/direction'
        - name: username
          in: query
          description: Filter by username
          schema:
            type: string
        - name: email
          in: query
          description: Filter by email
          schema:
            type: string
        - name: firstName
          in: query
          description: Filter by firstName
          schema:
            type: string
        - name: roleId
          in: query
          description: Filter by Role ID (supports multiple values)
          schema:
            type: integer
            format: int64
        - name: role
          in: query
          description: Filter by Role authority (supports multiple values)
          schema:
            type: string
        - name: accountId
          in: query
          description: >-
            Filter by Tenant ID. This is only available to master tenant users
            with permission to manage tenants and users.
          schema:
            type: integer
            format: int64
        - name: global
          in: query
          description: >-
            Global (All Tenants), load users from all tenants. The default is to
            only see your own tenant. This is only available to master tenant
            users with permission to manage tenants and users.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Array of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  meta:
                    $ref: '#/components/schemas/MetaObject'
              examples:
                getUser:
                  $ref: '#/components/examples/ListUsersResponse'
    post:
      summary: Create user
      description: Create a new user.
      operationId: createUser
      tags:
        - Users
      parameters:
        - name: accountId
          in: query
          description: Tenant ID, create user in a sub tenant account instead of your own.
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                user:
                  type: object
                  description: Payload for creating a new user
                  required:
                    - name
                    - roles
                  properties:
                    firstName:
                      type: string
                      description: First Name
                    lastName:
                      type: string
                      description: Last Name
                    username:
                      type: string
                      description: Username (unique per tenant).
                    email:
                      type: string
                      description: Email address
                    password:
                      type: string
                      format: password
                      description: Password
                    roles:
                      type: array
                      description: List of Roles
                      items:
                        $ref: '#/components/schemas/ReferenceObject'
            examples:
              createUserRequest:
                $ref: '#/components/examples/CreateUserRequest'
      responses:
        '200':
          description: User Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
              examples:
                createUserResponse:
                  $ref: '#/components/examples/GetUserResponse'
  /api/users/{id}:
    parameters:
      - $ref: '#/components/parameters/id-path'
    get:
      summary: Get user
      description: Get details about a user
      operationId: getUser
      tags:
        - Users
      responses:
        '200':
          description: User Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
              examples:
                GetUserResponse:
                  $ref: '#/components/examples/GetUserResponse'
    put:
      summary: Update user
      description: Update an existing user.
      operationId: updateUser
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                user:
                  type: object
                  description: Payload for creating a new user
                  required:
                    - name
                    - roles
                  properties:
                    firstName:
                      type: string
                      description: First Name
                    lastName:
                      type: string
                      description: Last Name
                    username:
                      type: string
                      description: Username (unique per tenant).
                    email:
                      type: string
                      description: Email address
                    password:
                      type: string
                      format: password
                      description: Password
                    roles:
                      type: array
                      description: List of Roles
                      items:
                        $ref: '#/components/schemas/ReferenceObject'
            examples:
              updateUserResponse:
                $ref: '#/components/examples/GetUserResponse'
      responses:
        '200':
          description: User Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
              examples:
                updateUserResponse:
                  $ref: '#/components/examples/GetUserResponse'
    delete:
      summary: Delete user
      description: Delete an existing user.
      operationId: deleteUser
      tags:
        - Users
      responses:
        '200':
          description: User was deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: User still has managed resources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                success: false
                msg: >-
                  Unable to delete an user without removing resources when
                  managed instances exist.
  /api/users/available-roles:
    get:
      summary: List available roles for a user
      description: Get a list of roles that can be assigned to a user.
      operationId: listUsersAvailableRoles
      tags:
        - Users
      parameters:
        - name: accountId
          in: query
          description: Tenant ID, find roles available to users of a sub tenant account.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Array of roles
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: object
                      description: Available User Role Object
                      properties:
                        id:
                          type: integer
                          format: int64
                        authority:
                          type: string
                          description: A unique name for the role.
              examples:
                ListAvailableUserRoles:
                  $ref: '#/components/examples/ListUsersAvailableRoles'
  /api/whoami:
    get:
      summary: Retrieves information about current user roles and permissions
      description: >
        Provides API to retrieve information about yourself, including your
        roles and permissions.


        The appliance build version is also returned.
      operationId: whoami
      tags:
        - Authentication
        - Users
      externalDocs:
        url: https://apidocs.morpheusdata.com/#whoami
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
              examples:
                Whoami Response:
                  $ref: '#/components/examples/user'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
  /api/wiki/categories:
    get:
      summary: Retrieves all Wiki categories associated with the account
      description: >
        This endpoint retrieves all Wiki categories associated with the account.
        The results are not paginated. The categories returned are those of the
        found pages.
      operationId: wikiCategories
      tags:
        - Wiki
      externalDocs:
        url: https://apidocs.morpheusdata.com/#get-all-wiki-categories
      parameters:
        - $ref: '#/components/parameters/phrase'
        - $ref: '#/components/parameters/pagePhrase'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-wikiCategories'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
  /api/wiki/pages:
    get:
      summary: Retrieves wiki pages associated with the account.
      description: |
        This endpoint retrieves wiki pages associated with the account.
      operationId: wikiList
      tags:
        - Wiki
      externalDocs:
        url: https://apidocs.morpheusdata.com/#get-all-wiki-pages
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/phrase'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-wiki'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
    post:
      summary: Create a Wiki Page
      description: |
        Creates a Wiki Page
      operationId: wikiAdd
      tags:
        - Wiki
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - page
              properties:
                page:
                  type: object
                  required:
                    - name
                    - category
                    - content
                  properties:
                    name:
                      type: string
                      example: Sample Doc
                    category:
                      type: string
                      example: info
                    content:
                      type: string
                      example: A sample document in **markdown**.
      externalDocs:
        url: https://apidocs.morpheusdata.com/#create-a-wiki-page
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-wikiCreatePage'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
  /api/wiki/pages/{id}:
    get:
      summary: Retrieves wiki a specific Wiki page
      description: |
        This endpoint retrieves a specific wiki page.
      operationId: wikiGet
      tags:
        - Wiki
      externalDocs:
        url: https://apidocs.morpheusdata.com/#get-a-specific-wiki-page
      parameters:
        - $ref: '#/components/parameters/id-path'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-wikiSpecificPage'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
    put:
      summary: Update a Wiki Page
      description: |
        Updates a Wiki Page
      operationId: wikiUpdate
      tags:
        - Wiki
      parameters:
        - $ref: '#/components/parameters/id-path'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Sample Doc
                    category:
                      type: string
                      example: info
                    content:
                      type: string
                      example: A sample document in **markdown**.`
      externalDocs:
        url: https://apidocs.morpheusdata.com/#update-a-wiki-page
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-wikiCreatePage'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
  /oauth/token:
    post:
      summary: Provides authentication via username and password
      description: >
        This endpoint provides authentication via `username` and `password` of a
        Morpheus User. The response includes a valid access token. If your
        current token is expired, a new one will be created and returned.


        Subtenant users will need to pass their subdomain prefix like
        subdomain\username. The default subdomain is the tenant account ID.


        This endpoint also allows refreshing your current access token to get a
        new token. This is done by passing your current `refresh_token`. This
        provides a way to renew your client’s session with the API, and extend
        the expiration date.


        This will render your current access token invalid, so you will need to
        update any scripts relying on it.
      operationId: accessTokenGet
      tags:
        - Authentication
      security: []
      parameters:
        - name: client_id
          required: true
          in: query
          description: >-
            Client ID, use morph-api. Users may only have one access token per
            Client ID. The CLI uses morph-cli.
          schema:
            type: string
            enum:
              - morph-api
        - name: grant_type
          required: true
          in: query
          description: OAuth Grant Type, use password.
          schema:
            type: string
            enum:
              - password
              - refresh_token
        - name: scope
          required: true
          in: query
          description: OAuth token scope, use write.
          schema:
            type: string
            enum:
              - write
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  description: >-
                    Specified as "username" or "tenantId\username" with proper
                    HTML encoding and used in conjunction with `password`. Not
                    utilized with `refresh_token`.
                  type: string
                password:
                  description: >-
                    The Password for defined `username`. Must have proper HTML
                    encoding
                  type: string
                  format: password
                refresh_token:
                  description: >-
                    The `refresh_token` value from a previous API generation can
                    be utilized instead of `username` and `password`.
      externalDocs:
        url: https://apidocs.morpheusdata.com/#get-access-token
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
              examples:
                Access Token responses:
                  $ref: '#/components/examples/accessToken'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
components:
  securitySchemes:
    bearerAuth:
      description: Populate a bearer token for the Morpheus appliance you are testing
      type: http
      scheme: bearer
  parameters:
    phrase:
      name: phrase
      in: query
      description: Search phrase for partial matches on name or description
      schema:
        type: string
    max:
      name: max
      in: query
      description: Maximum number of records to return
      schema:
        type: integer
        format: int64
        default: 25
    offset:
      name: offset
      in: query
      description: Offset records, the number of records to skip, for paginating requests
      schema:
        type: integer
        format: int64
        default: 0
    sort:
      name: sort
      in: query
      description: Sort order, the name of the property to sort by
      schema:
        type: string
        default: name
    direction:
      name: direction
      in: query
      description: Sort direction, use 'desc' to reverse sort
      schema:
        type: string
        default: asc
        enum:
          - asc
          - desc
    id-path:
      name: id
      in: path
      description: Morpheus ID of the Object being created or referenced
      required: true
      schema:
        type: number
    name:
      name: name
      in: query
      description: If specified will return an exact match on name
      schema:
        type: string
    code:
      name: code
      in: query
      description: If specified will return an exact match on code
      schema:
        type: string
    category:
      name: category
      in: query
      description: If specified will return an exact match on category
      schema:
        type: string
    format-path:
      name: format
      in: path
      required: true
      description: Format of the rendered report file, `.json` or `.csv`.
      schema:
        type: string
        default: .json
        enum:
          - .json
          - .csv
    query:
      name: query
      in: query
      description: Alias for phrase
      schema:
        type: string
    pagePhrase:
      name: pagePhrase
      in: query
      description: If specified will return a partial match on page name
      schema:
        type: string
  schemas:
    Tenant:
      type: object
      description: Tenant Object
      properties:
        id:
          type: integer
          format: int64
          description: ID
        name:
          type: string
          description: Name
        description:
          type: string
          description: Description
          nullable: true
        role:
          type: object
          description: >-
            Tenant Base Role. This is the primary role of the tenant. All roles
            created within the tenant must inherit this role as the base role.
          properties:
            id:
              type: integer
              format: int64
            authority:
              type: string
              description: A unique name for the role.
        subdomain:
          type: string
          description: >-
            Subdomain is used for creating a direct login url in Identity
            Sources or as a login prefix to identify the tenant i.e.
            'subdomain\username'
          nullable: true
        currency:
          type: string
          enum:
            - AUD
            - AUD
            - BGN
            - BRL
            - CAD
            - CHF
            - CLF
            - CLP
            - CNY
            - CZK
            - DKK
            - EUR
            - GBP
            - HKD
            - HRK
            - HUF
            - IDR
            - ILS
            - INR
            - JPY
            - KRW
            - MXN
            - MYR
            - NOK
            - NZD
            - PHP
            - PLN
            - RON
            - RUB
            - SEK
            - SGD
            - THB
            - TRY
            - USD
            - ZAR
          default: USD
        externalId:
          type: string
          nullable: true
        active:
          type: boolean
          default: true
          description: Flag that can be used to disable a tenant
        master:
          type: boolean
          default: false
          description: >-
            Master Tenant. This is the master account and parent of all other
            tenants, only true for the tenant created during setup.
        dateCreated:
          type: string
          format: date-time
          description: Dated Created timestamp
        lastUpdated:
          type: string
          format: date-time
          description: Last Updated timestamp
        stats:
          type: object
          description: Tenant Statistics
          properties:
            userCount:
              type: integer
              format: int64
              description: The number of users belonging to the tenant
            instanceCount:
              type: integer
              format: int64
              description: The of the number of instances belonging to the tenant
    MetaObject:
      type: object
      description: >-
        Metadata about the returned array of results, provides pagination
        information.
      properties:
        size:
          type: integer
          format: int64
          description: Number of records returned in the response
          default: 0
        total:
          type: integer
          format: int64
          description: Total number of records found
          default: 0
        offset:
          type: integer
          format: int64
          description: >-
            Offset records, the number of records to skip, can be used to
            paginate over results.
          default: 0
        max:
          type: integer
          format: int64
          description: Max size, the maximum number of records to include in the response.
          default: 25
    CurrencyCode:
      type: string
      description: Currency Code (ISO 4217)
      enum:
        - AUD
        - AUD
        - BGN
        - BRL
        - CAD
        - CHF
        - CLF
        - CLP
        - CNY
        - CZK
        - DKK
        - EUR
        - GBP
        - HKD
        - HRK
        - HUF
        - IDR
        - ILS
        - INR
        - JPY
        - KRW
        - MXN
        - MYR
        - NOK
        - NZD
        - PHP
        - PLN
        - RON
        - RUB
        - SEK
        - SGD
        - THB
        - TRY
        - USD
        - ZAR
      default: USD
    Success:
      type: object
      description: >-
        The standard response object that is returned when an operation is
        successful
      properties:
        success:
          type: boolean
          description: >-
            Success indicator, true when the request succeeded and false when an
            error occurred
          default: true
      example:
        success: true
    Error:
      type: object
      description: >-
        The standard response object that is returned when a request fails to
        complete successfully
      properties:
        success:
          type: boolean
          description: >-
            Success indicator, true when the request succeeded and false when an
            error occurred
          default: true
        msg:
          type: string
          description: >-
            Message containing a description of the result, usually a message
            about the error that occurred
          nullable: true
        errors:
          type: object
          description: >-
            Validation errors, with a key for Object containing error messages
            for each invalid parameter (key)
          nullable: true
    dashboard:
      title: 200 Dashboard
      type: object
      properties:
        success:
          type: boolean
        instanceStats:
          type: object
          properties:
            maxCpu:
              type: number
            maxCores:
              type: number
            cpuUsage:
              type: number
            cpuUsageAverage:
              type: number
            cpuUsagePeak:
              type: number
            usedMemory:
              type: number
            maxMemory:
              type: number
            usedStorage:
              type: number
            maxStorage:
              type: number
            running:
              type: number
            total:
              type: number
            totalContainers:
              type: number
        provisioning:
          type: object
          properties:
            instanceCount:
              type: number
            favoriteInstances:
              type: array
              items:
                type: object
        monitoring:
          type: object
          properties:
            avgHealth:
              type: number
            avgResponseTime:
              type: number
            warningApps:
              type: number
            warningChecks:
              type: number
            failApps:
              type: number
            totalApps:
              type: number
            failChecks:
              type: number
            successApps:
              type: number
            mutedApps:
              type: number
            successChecks:
              type: number
            totalChecks:
              type: number
            mutedChecks:
              type: number
            responseTimes:
              type: array
              items:
                type: number
            allSuccess:
              type: boolean
            openIncidents:
              type: number
        backups:
          type: object
          properties:
            accountStats:
              type: object
              properties:
                totalSizeByDay:
                  type: array
                  items:
                    type: number
                totalSizeByDay7Days:
                  type: array
                  items:
                    type: number
                formattedTotalSize:
                  type: object
                  properties:
                    value:
                      type: string
                    units:
                      type: string
                backupCount:
                  type: number
                totalSize:
                  type: number
                success:
                  type: number
                failed:
                  type: number
                totalCompleted:
                  type: number
                lastSevenDays:
                  type: object
                  properties:
                    failed:
                      type: number
                    successful:
                      type: number
                    completed:
                      type: number
                avgSize:
                  type: number
                failedRate:
                  type: number
                successRate:
                  type: number
                nextFireTotal:
                  type: number
                backupDayCount:
                  type: array
                  items:
                    type: number
                backupDayCountTotal:
                  type: number
        activity:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              success:
                type: boolean
              activityType:
                type: string
              name:
                type: string
              message:
                type: string
              objectType:
                type: string
              objectId:
                type: number
              user:
                type: object
                properties:
                  id:
                    type: number
                  username:
                    type: string
              ts:
                type: string
        logStats:
          type: object
          properties:
            success:
              type: boolean
            msg:
              type: string
    DateCreated:
      type: string
      format: date-time
      description: Date Created timestamp (ISO 8601)
      example: 2019-03-06T17:52:29+0000
    LastUpdated:
      type: string
      format: date-time
      description: Last Updated timestamp (ISO 8601)
      example: 2019-03-06T17:52:29+0000
    License:
      description: >-
        Object for logging in to the [Morpheus Hub](https://morpheushub.com)
        with existing credentials. This is only required for `hubmode=login`.
      type: object
      properties:
        productTier:
          type: string
          description: Product Tier
        startDate:
          type: string
          format: date-time
          description: Start Date
        endDate:
          type: string
          format: date-time
          description: End Date
        maxInstances:
          type: integer
          format: int64
          description: Max Instances
        maxMemory:
          type: integer
          format: int64
          description: Max Memory (bytes)
        maxStorage:
          type: integer
          format: int64
          description: Max Storage (bytes)
        hardLimit:
          type: integer
          format: int64
          description: >-
            Hard Limit determines whether the capacity limits are actaully
            enforced or just generate a warning
        freeTrial:
          type: integer
          format: int64
          description: >-
            Free Trial. This indicates that it is a free Community Edition
            license.
        multiTenant:
          type: integer
          format: int64
          description: Multi Tenant. Allow multiple tenants
        whitelabel:
          type: integer
          format: int64
          description: Multi Tenant. Allow white labeling
        reportStatus:
          type: integer
          format: int64
          description: Report Status
        supportLevel:
          type: integer
          format: int64
          description: Support Level
        accountName:
          type: integer
          format: int64
          description: Account Name
        features:
          type: object
          description: >-
            Map of features and whether they are enabled (true) or disabled
            (false).
        zoneTypes:
          type: array
          items:
            type: string
          description: Allowed cloud types, a value of null means all types are allowed.
          nullable: true
        dateCreated:
          $ref: '#/components/schemas/DateCreated'
        lastUpdated:
          $ref: '#/components/schemas/LastUpdated'
    CurrentUsage:
      type: object
      description: Current usage totals for appliance
      properties:
        memory:
          type: integer
          format: int64
          description: Total Used Memory (bytes)
        storage:
          type: integer
          format: int64
          description: Total Used Storage (bytes)
        workloads:
          type: integer
          format: int64
          description: Total Workloads
    ping:
      title: 200 Ping
      type: object
      properties:
        success:
          type: boolean
        buildVersion:
          type: string
    200-reportTypes:
      title: 200 Report Types
      type: object
      properties:
        reportTypes:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                example: 95
              code:
                type: string
                example: amazonReservationCoverage
              name:
                type: string
                example: Amazon Reservation Coverage
              description:
                type: string
                example: >-
                  View how Amazon EC2 instance types are covered by Reserved
                  Instances.
              category:
                type: string
                example: cost
              visible:
                type: boolean
              masterOnly:
                type: boolean
              ownerOnly:
                type: boolean
              supportsAllZoneTypes:
                type: boolean
              isPlugin:
                type: string
                format: nullable
              dateCreated:
                type: string
                format: date-time
                example: '2020-09-02T19:35:18Z'
              optionTypes:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      example: 2748
                    name:
                      type: string
                      example: endDate
                    description:
                      type: string
                      format: nullable
                    code:
                      type: string
                      example: reportType.endDate
                    fieldName:
                      type: string
                      example: endDate
                    fieldLabel:
                      type: string
                      example: End Date
                    fieldCode:
                      type: string
                      example: gomorpheus.optiontype.EndDate
                    fieldContext:
                      type: string
                      example: config
                    fieldGroup:
                      type: string
                      format: nullable
                    fieldClass:
                      type: string
                      format: nullable
                    fieldAddOn:
                      type: string
                      format: nullable
                    fieldComponent:
                      type: string
                      format: nullable
                    fieldInput:
                      type: string
                      format: nullable
                    placeHolder:
                      type: string
                      format: nullable
                    verifyPattern:
                      type: string
                      format: nullable
                    helpBlock:
                      type: string
                      example: null
                    helpBlockFieldCode:
                      type: string
                      format: nullable
                    defaultValue:
                      type: string
                      format: nullable
                    optionSource:
                      type: string
                      format: nullable
                    optionSourceType:
                      type: string
                      format: nullable
                    optionList:
                      type: string
                      format: nullable
                    type:
                      type: string
                      example: text
                    advanced:
                      type: boolean
                    required:
                      type: boolean
                    exportMeta:
                      type: boolean
                    editable:
                      type: boolean
                    creatable:
                      type: boolean
                    config:
                      type: string
                      format: nullable
                    displayOrder:
                      type: number
                      example: 2
                    wrapperClass:
                      type: string
                      format: nullable
                    enabled:
                      type: boolean
                    noBlank:
                      type: boolean
                    dependsOnCode:
                      type: string
                      format: nullable
                    visibleOnCode:
                      type: string
                      format: nullable
                    requireOnCode:
                      type: string
                      format: nullable
                    contextualDefault:
                      type: boolean
                    displayValueOnDetails:
                      type: string
                      format: nullable
                    showOnCreate:
                      type: string
                      format: nullable
                    showOnEdit:
                      type: string
                      format: nullable
              supportedZoneTypes:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      example: 31
                    code:
                      type: string
                      example: amazon
                    name:
                      type: string
                      example: Amazon
        meta:
          type: object
          properties:
            size:
              type: number
              example: 25
            total:
              type: number
              example: 30
            offset:
              type: number
              example: 0
            max:
              type: number
              example: 25
    200-reports:
      title: 200 Reports
      type: object
      properties:
        reportResults:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int32
                example: 2
              type:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 21
                  code:
                    type: string
                    example: appCost
                  name:
                    type: string
                    example: Application Cost
              reportTitle:
                type: string
                example: Application Cost Jun 04 2019 19:28:02
              filterTitle:
                type: string
                example: Jun 04 2019
              status:
                type: string
                example: ready
              dateCreated:
                type: string
                example: 2019-06-04T23:28:02+0000
              lastUpdated:
                type: string
                example: 2019-06-04T23:28:02+0000
              startDate:
                type: string
                format: nullable
              endDate:
                type: string
                format: nullable
              config:
                type: object
                properties:
                  type:
                    type: string
                    example: appCost
              createdBy:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  username:
                    type: string
                    example: root
        meta:
          type: object
          properties:
            size:
              type: integer
              format: int32
              example: 2
            total:
              type: integer
              format: int32
              example: 2
            offset:
              type: integer
              format: int32
              example: 0
            max:
              type: integer
              format: int32
              example: 25
    200-success:
      title: 200 Success
      type: object
      properties:
        success:
          type: boolean
    Role:
      type: object
      description: Role Object
      properties:
        id:
          type: integer
          format: int64
          description: ID
        authority:
          type: string
          description: Authority, a unique name for the role
        description:
          type: string
          description: Description
          nullable: true
        roleType:
          type: string
          description: Role type
          enum:
            - user
            - account
            - admin
          default: user
        multitenant:
          type: boolean
          default: false
          description: Multitenant
        multitenantLocked:
          type: boolean
          default: false
          description: Multitenant Locked
        dateCreated:
          $ref: '#/components/schemas/DateCreated'
        lastUpdated:
          $ref: '#/components/schemas/LastUpdated'
    search:
      title: 200 Search
      type: object
      properties:
        hits:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: ID
              uuid:
                type: string
                description: UUID
              name:
                type: string
                description: Name
              description:
                type: string
                format: nullable
              type:
                type: string
              dateCreated:
                type: string
                format: date-time
              score:
                type: integer
                format: int64
        query:
          type: string
        took:
          type: integer
          format: int64
        meta:
          $ref: '#/components/schemas/MetaObject'
    User:
      title: 200 User
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: integer
              format: int64
              description: ID
            accountId:
              type: integer
              format: int64
              description: Tenant ID
            username:
              type: string
              description: Username
            displayName:
              type: string
              description: Display Name, firstName + lastName or username
            email:
              type: string
              description: email
            firstName:
              type: string
              description: Fist Name
            lastName:
              type: string
              description: Last Name
            enabled:
              type: boolean
              description: Flag that can be used to disable a user
            receiveNotifications:
              type: boolean
              description: Flag that indicates a user wishes to receive notifications
            isUsing2FA:
              type: boolean
              description: Flag that indicates a user is utilizing local 2fa
            accountExpired:
              type: boolean
              description: Flag that indicates user account is expired
            accountLocked:
              type: boolean
              description: Flag that indicates user account is locked
            passwordExpired:
              type: boolean
              description: Flag that indicates user password is expired
            loginCount:
              type: integer
              format: int64
              description: Number of times user has logged in
            loginAttempts:
              type: integer
              format: int64
              description: >-
                Number of invalid login attempts. This resets to 0 after
                successful login.
            lastLoginDate:
              type: string
              format: date-time
              description: Last successful login date
            roles:
              type: array
              description: User roles
              items:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: Role ID
                  authority:
                    type: string
                    description: Unique name for a role
                  description:
                    type: string
            account:
              type: object
              description: Tenant the user belongs to
              properties:
                id:
                  type: integer
                  format: int64
                  description: Tenant ID
                name:
                  type: string
                  description: Tenant Name
            linuxUsername:
              type: string
              description: Linux username/user settings for provisioning
              nullable: true
            linuxPassword:
              type: string
              description: Linux password/user settings for provisioning
              nullable: true
            linuxKeyPairId:
              type: string
              description: SSH Key (Key Pair ID)/user settings for provisioning
              format: int64
              nullable: true
            windowsUsername:
              type: string
              description: Windows username/user settings for provisioning
              nullable: true
            windowsPassword:
              type: string
              description: Windows password/user settings for provisioning
              nullable: true
            defaultPersona:
              type: string
              description: Default person selected when user logs in
              format: int64
            dateCreated:
              type: string
              description: Date created timestamp
              format: date-time
            lastUpdated:
              type: string
              description: Date last updated timestamp
              format: date-time
        isMasterAccount:
          type: boolean
          description: Flag for master administrative account
        permissions:
          type: array
          description: Applied permissions
          items:
            type: object
            properties:
              name:
                type: string
              code:
                type: string
              access:
                type: string
        appliance:
          type: object
          properties:
            buildVersion:
              type: string
    ReferenceObject:
      type: object
      description: >-
        A simple object to represent a specific resource, typically an id and
        name.
      properties:
        id:
          type: integer
          format: int64
          description: Resource ID
        name:
          type: string
          description: Resource name
        code:
          type: string
          description: Resource code
      required:
        - id
    user:
      title: 200 User
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: integer
              format: int64
              description: ID
            accountId:
              type: integer
              format: int64
              description: Tenant ID
            username:
              type: string
              description: Username
            displayName:
              type: string
              description: Display Name, firstName + lastName or username
            email:
              type: string
              description: email
            firstName:
              type: string
              description: Fist Name
            lastName:
              type: string
              description: Last Name
            enabled:
              type: boolean
              description: Flag that can be used to disable a user
            receiveNotifications:
              type: boolean
              description: Flag that indicates a user wishes to receive notifications
            isUsing2FA:
              type: boolean
              description: Flag that indicates a user is utilizing local 2fa
            accountExpired:
              type: boolean
              description: Flag that indicates user account is expired
            accountLocked:
              type: boolean
              description: Flag that indicates user account is locked
            passwordExpired:
              type: boolean
              description: Flag that indicates user password is expired
            loginCount:
              type: integer
              format: int64
              description: Number of times user has logged in
            loginAttempts:
              type: integer
              format: int64
              description: >-
                Number of invalid login attempts. This resets to 0 after
                successful login.
            lastLoginDate:
              type: string
              format: date-time
              description: Last successful login date
            roles:
              type: array
              description: User roles
              items:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: Role ID
                  authority:
                    type: string
                    description: Unique name for a role
                  description:
                    type: string
            account:
              type: object
              description: Tenant the user belongs to
              properties:
                id:
                  type: integer
                  format: int64
                  description: Tenant ID
                name:
                  type: string
                  description: Tenant Name
            linuxUsername:
              type: string
              description: Linux username/user settings for provisioning
              nullable: true
            linuxPassword:
              type: string
              description: Linux password/user settings for provisioning
              nullable: true
            linuxKeyPairId:
              type: string
              description: SSH Key (Key Pair ID)/user settings for provisioning
              format: int64
              nullable: true
            windowsUsername:
              type: string
              description: Windows username/user settings for provisioning
              nullable: true
            windowsPassword:
              type: string
              description: Windows password/user settings for provisioning
              nullable: true
            defaultPersona:
              type: string
              description: Default person selected when user logs in
              format: int64
            dateCreated:
              type: string
              description: Date created timestamp
              format: date-time
            lastUpdated:
              type: string
              description: Date last updated timestamp
              format: date-time
        isMasterAccount:
          type: boolean
          description: Flag for master administrative account
        permissions:
          type: array
          description: Applied permissions
          items:
            type: object
            properties:
              name:
                type: string
              code:
                type: string
              access:
                type: string
        appliance:
          type: object
          properties:
            buildVersion:
              type: string
    200-wikiCategories:
      title: 200 Wiki Categories
      type: object
      properties:
        categories:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: apps
              pageCount:
                type: number
                example: 1
    200-wiki:
      title: 200 Wiki
      type: object
      properties:
        pages:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                example: 1
              name:
                type: string
                example: Home
              urlName:
                type: string
                example: home
              category:
                type: string
                format: nullable
              refId:
                type: string
                format: nullable
              refType:
                type: string
                format: nullable
              format:
                type: string
                example: markdown
              content:
                type: string
                example: Welcome to the home page for this Morpheus wiki.
              createdBy:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  username:
                    type: string
                    example: admin
              updatedBy:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  username:
                    type: string
                    example: admin
              dateCreated:
                type: string
                example: 2019-06-27T16:55:59+0000
              lastUpdated:
                type: string
                example: 2019-06-27T16:55:59+0000
        meta:
          type: object
          properties:
            size:
              type: number
              example: 2
            total:
              type: number
              example: 2
            max:
              type: number
              example: 25
            offset:
              type: number
              example: 0
    200-wikiCreatePage:
      title: 200 Wiki Create Page
      type: object
      properties:
        page:
          type: object
          properties:
            id:
              type: number
              example: 934
            name:
              type: string
              example: Sample Doc
            urlName:
              type: string
              example: info/sample-doc
            category:
              type: string
              example: info
            refId:
              type: string
              format: nullable
            refType:
              type: string
              format: nullable
            format:
              type: string
              example: markdown
            content:
              type: string
              example: A sample document in **markdown**.
            createdBy:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                username:
                  type: string
                  example: Admin
            updatedBy:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                username:
                  type: string
                  example: Admin
            dateCreated:
              type: string
              format: date-time
              example: '2022-02-24T21:34:20Z'
            lastUpdated:
              type: string
              format: date-time
              example: '2022-02-24T21:34:20Z'
        success:
          type: boolean
    200-wikiSpecificPage:
      title: 200 Wiki Page
      type: object
      properties:
        page:
          type: object
          properties:
            id:
              type: number
              example: 934
            name:
              type: string
              example: Sample Doc
            urlName:
              type: string
              example: info/sample-doc
            category:
              type: string
              example: info
            refId:
              type: string
              format: nullable
            refType:
              type: string
              format: nullable
            format:
              type: string
              example: markdown
            content:
              type: string
              example: An updated sample document in **markdown**. Cheers!
            createdBy:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                username:
                  type: string
                  example: Admin
            updatedBy:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                username:
                  type: string
                  example: Admin
            dateCreated:
              type: string
              format: date-time
              example: '2022-02-24T21:34:20Z'
            lastUpdated:
              type: string
              format: date-time
              example: '2022-02-24T21:43:54Z'
    accessToken:
      title: 200 Access Token
      type: object
      properties:
        access_token:
          type: string
          description: Token that grants API Access
        refresh_token:
          type: string
          description: Token that can request an new API access_token
        expires_in:
          type: number
          description: Epoch time when token expires
        token_type:
          type: string
          description: Token type granted
        scope:
          type: string
          description: Scope granted
  examples:
    ListTenantsAvailableRoles:
      summary: Available Tenant Roles
      value:
        roles:
          - id: 1
            authority: System Admin
            description: Super User
            scope: Admin
            roleType: null
            multitenant: false
            multitenantLocked: null
            ownerId: null
            owner: null
            dateCreated: 2016-08-27T19:26:19+0000
            lastUpdated: 2016-08-27T19:26:19+0000
          - id: 166
            authority: Tenant Admin
            description: Tenant Role Template
            scope: AppSystem
            roleType: account
            multitenant: false
            multitenantLocked: null
            ownerId: null
            owner: null
            dateCreated: 2016-12-13T16:38:16+0000
            lastUpdated: 2016-12-14T23:39:05+0000
        meta: null
    dashboard:
      summary: Dashboard Response
      value:
        success: true
        instanceStats:
          maxCpu: 18
          maxCores: 35
          cpuUsage: 0
          cpuUsageAverage: 7.213778379417601
          cpuUsagePeak: 34.55673
          usedMemory: 55459662848
          maxMemory: 106568876032
          usedStorage: 173983399936
          maxStorage: 1113470271488
          running: 13
          total: 18
          totalContainers: 24
        provisioning:
          instanceCount: 18
          favoriteInstances: []
        monitoring:
          avgHealth: 8.4444444444
          avgResponseTime: 915.5555555556
          warningApps: 4
          warningChecks: 2
          failApps: 0
          totalApps: 5
          failChecks: 4
          successApps: 0
          mutedApps: 1
          successChecks: 21
          totalChecks: 30
          mutedChecks: 4
          responseTimes:
            - 0
            - 0
            - 10
            - 0
            - 0
            - 0
            - 0
          allSuccess: false
          openIncidents: 5
        backups:
          accountStats:
            totalSizeByDay:
              - 1883
              - 1883
              - 71515
              - 134532
              - 134532
            totalSizeByDay7Days:
              - 134532
              - 134532
              - 134532
              - 134532
              - 134532
              - 134532
              - 134532
            formattedTotalSize:
              value: '132'
              units: GB
            backupCount: 10
            totalSize: 134532
            success: 11
            failed: 0
            totalCompleted: 11
            lastSevenDays:
              failed: 0
              successful: 6
              completed: 6
            avgSize: 12230.1818181818
            failedRate: 0
            successRate: 1
            nextFireTotal: 1
            backupDayCount:
              - 0
              - 0
              - 0
              - 0
              - 0
              - 0
              - 0
            backupDayCountTotal: 0
        activity:
          - _id: 5a6e90e3-b7fa-4105-ba17-46999c2a0ebd
            success: true
            activityType: Admin
            name: areid
            message: User 'areid' updated.
            objectType: User
            objectId: 189
            user:
              id: 240
              username: Greg Willis
            ts: '2022-03-01T02:09:21Z'
          - _id: 98d7f835-002a-4800-8f5c-8b24501a3690
            success: true
            activityType: Admin
            name: Aaron Reid
            message: User 'Aaron Reid' updated.
            objectType: User
            objectId: 238
            user:
              id: 240
              username: Greg Willis
            ts: '2022-03-01T02:09:15Z'
          - _id: cb01fcf7-b2a8-4f42-9cbe-4402e4c86b9b
            success: true
            activityType: Alert
            name: MRDMMON1010
            message: Instance has successfully been deleted by 'Morpheus'.
            objectType: Instance
            objectId: 18182
            user:
              id: 263
              username: Martez Reed
            ts: '2022-02-28T22:37:18Z'
          - _id: c11fc2d4-04f4-40dd-aece-d8672f665529
            success: true
            activityType: Alert
            name: MRDMMON1010
            message: Server has successfully been deleted by 'Morpheus'.
            objectType: ComputeServer
            objectId: 218891
            user: null
            ts: '2022-02-28T22:37:18Z'
          - _id: d47ad6db-dd84-4b02-9e32-fdeb43a6a568
            success: true
            activityType: Provisioning
            name: MRDMMON1011
            message: New instance has successfully been created by Morpheus.
            objectType: Instance
            objectId: 18183
            user: null
            ts: '2022-02-28T22:37:18Z'
          - _id: d618bd64-04dd-47ef-856d-65800936806b
            success: true
            activityType: Provisioning
            name: MRDMMON1010
            message: New instance has successfully been created by Morpheus.
            objectType: Instance
            objectId: 18182
            user: null
            ts: '2022-02-28T21:27:43Z'
          - _id: 9961de13-836d-4967-a4ca-31b13f19b726
            success: true
            activityType: Provisioning
            name: MRDMRAB1017
            message: New instance has successfully been created by Morpheus.
            objectType: Instance
            objectId: 18181
            user: null
            ts: '2022-02-28T20:09:43Z'
          - _id: 84538ec5-5016-418e-8f23-599640813b9a
            success: true
            activityType: Provisioning
            name: JWDMCEN1300
            message: New instance has successfully been created by Morpheus.
            objectType: Instance
            objectId: 18180
            user:
              id: 236
              username: Jeff Wheeler
            ts: '2022-02-28T19:44:42Z'
        logStats:
          success: false
          msg: Found no scope objects for user
    ListDocsResponse:
      summary: List of documentation links.
      value:
        links:
          - name: Morpheus API Swagger Documentation
            url: https://morpheus.bungebash.com/api/doc/openapi.json
            description: >-
              Morpheus API Documentation in the OpenAPI 3.0 format. Default
              format is JSON, use extension .yaml for YAML instead. This
              document is generated and made available by the api itself.
            type: openapi
          - name: Morpheus Documentation
            url: https://docs.morpheusdata.com/
            description: >-
              The Morpheus Documentation site is the main resource for
              documentation on the Morpheus appliance and its features.
            type: external
          - name: Morpheus Homepage
            url: https://morpheusdata.com
            description: >-
              The Morpheus Data homepage is a good place to start learning about
              Morpheus and what is is capable of. It also contains links to
              support.
            link: external
    GetLicenseResponse:
      summary: Example License Response
      value:
        license:
          productTier: capacity
          startDate: '2020-04-07T00:00:00Z'
          endDate: '2025-05-07T00:00:00Z'
          maxInstances: 0
          maxMemory: 0
          maxStorage: 0
          hardLimit: false
          freeTrial: false
          multiTenant: true
          whitelabel: true
          reportStatus: true
          supportLevel: standard
          accountName: Meta Cortex Corportation
          amazonProductCodes: null
          features:
            dashboard: true
            guidance: true
            discovery: true
            analytics: true
            scheduling: true
            approvals: true
            usage: true
            activity: true
            instances: true
            apps: true
            templates: true
            automation: true
            virtualImages: true
            library: true
            migrations: true
            deployments: true
            groups: true
            clouds: true
            hosts: true
            network: true
            loadBalancers: true
            storage: true
            keyPairs: true
            sslCertificates: true
            boot: true
            backups: true
            cypher: true
            archives: true
            imageBuilder: true
            tenants: true
            plans: true
            pricing: true
            users: true
            userGroups: true
            monitoring: true
            logging: true
            monitoringServices: true
            loggingServices: true
            backupServices: true
            dnsServices: true
            codeService: true
            buildServices: true
            loadBalancerServices: true
            ipamServices: true
            approvalServices: true
            cmdbServices: true
            deploymentServices: true
            automationServices: true
            serviceDiscoveryServices: true
            identityServices: true
            trustServices: true
          zoneTypes: null
          lastUpdated: '2020-04-07T15:02:28Z'
          dateCreated: '2020-04-07T15:02:28Z'
        currentUsage:
          memory: 26256664064
          storage: 306786373632
          workloads: 12
    ping-authenticated:
      summary: Authenticated Ping Response
      value:
        success: true
        buildVersion: 5.4.4
    ping-unauthenticated:
      summary: Unauthenticated Ping Response
      value:
        success: true
        buildVersion: ''
    ListRolesResponse:
      summary: List Roles Response Example
      value:
        roles:
          - id: 1
            authority: System Admin
            description: Super User
            scope: Admin
            roleType: null
            multitenant: false
            multitenantLocked: null
            owner: null
            dateCreated: 2016-08-27T19:26:19+0000
            lastUpdated: 2016-08-27T19:26:19+0000
          - id: 2
            authority: Tenant Admin
            description: Tenant Role Template
            scope: AppSystem
            roleType: account
            multitenant: false
            multitenantLocked: null
            owner: null
            dateCreated: 2016-12-13T16:38:16+0000
            lastUpdated: 2016-12-14T23:39:05+0000
          - id: 3
            authority: User Admin
            description: Sub Tenant User Template
            scope: AppSystem
            roleType: user
            multitenant: false
            multitenantLocked: null
            owner: null
            dateCreated: 2016-12-02T15:01:17+0000
            lastUpdated: 2016-12-02T15:01:17+0000
        meta:
          size: 3
          total: 3
          offset: 0
          max: 25
    CreateRoleRequest:
      summary: Create Role Request Example
      value:
        role:
          authority: Operator
          description: The operator
    CreateRoleResponse:
      summary: Create Role Response Example
      value:
        role:
          id: 4
          authority: Operator
          description: The operator
          roleType: user
          multitenant: false
          multitenantLocked: null
          owner:
            id: 1
            name: root
          dateCreated: 2016-12-12T01:28:28+0000
          lastUpdated: 2019-10-23T21:36:22+0000
    GetRoleResponse:
      summary: Get Role Response Example
      value:
        role:
          id: 4
          authority: Operator
          description: The operator
          roleType: user
          multitenant: false
          multitenantLocked: null
          owner:
            id: 1
            name: root
          dateCreated: 2016-12-12T01:28:28+0000
          lastUpdated: 2019-10-23T21:36:22+0000
        featurePermissions: []
        globalSiteAccess: full
        globalZoneAccess: full
        globalInstanceTypeAccess: full
        globalAppTemplateAccess: full
    UpdateRoleRequest:
      summary: Update Role Request Example
      value:
        role:
          authority: Operations
          description: Operations user with limited permissions
    UpdateRoleResponse:
      summary: Update Role Response Example
      value:
        role:
          id: 4
          authority: Operations
          description: Operations user with limited permissions
          roleType: user
          multitenant: false
          multitenantLocked: null
          owner:
            id: 1
            name: root
          dateCreated: 2016-12-12T01:28:28+0000
          lastUpdated: 2019-10-23T21:36:22+0000
    search:
      summary: Search Response
      value:
        hits:
          - id: '18157'
            uuid: 4e33c2ef-5b70-45c0-9700-939e3162e42b
            name: EC2Instance
            description: null
            type: Instance
            dateCreated: '2022-02-22T19:49:28Z'
            score: 20
          - id: '218195'
            uuid: aef509cc-8727-4691-bfdd-55b4b6d06941
            name: EC2Instance
            description: null
            type: ComputeServer
            dateCreated: '2022-02-22T19:49:28Z'
            score: 3
          - id: '4'
            uuid: fca933d0-5105-4e63-aa8b-6c381f25bf95
            name: EC2 Instance
            description: >-
              Easily provision any Amazon AMI tied to your Amazon cloud account
              just as if it were any other instance type.
            type: InstanceType
            dateCreated: null
            score: 1.5
        query: ec2
        took: 2964
        meta:
          offset: 0
          max: 25
          size: 3
          total: 3
    ListUsersResponse:
      summary: List of users
      value:
        users:
          - id: 1
            accountId: 1
            username: root
            displayName: root
            email: root@acmecorp.com
            firstName: ''
            lastName: ''
            enabled: true
            receiveNotifications: true
            accountExpired: false
            accountLocked: false
            passwordExpired: false
            loginCount: 27
            loginAttempts: 0
            lastLoginDate: 2019-03-05T06:00:05+0000
            roles:
              - id: 1
                authority: System Admin
                description: Super User
            account:
              id: 1
              name: Acme
            windowsUsername: null
            linuxUsername: null
            dateCreated: 2017-09-14T13:57:16+0000
            lastUpdated: 2019-10-09T00:35:13+0000
        meta:
          offset: 0
          max: 1
          size: 1
          total: 1
        global: false
    CreateUserRequest:
      summary: Create User Request Example
      value:
        user:
          username: admin
          password: 8a20b78ba9623f8609cbc3712b96fb4c68bbef1880
          email: admin@morpheusdata.com
          firstName: Morpheus
          lastName: Admin
          receiveNotifications: true
          windowsUsername: morpheusadmin
          linuxUsername: morpheusadmin
          roles:
            - id: 1
    GetUserResponse:
      summary: Get User Response Example
      value:
        user:
          id: 2
          accountId: 1
          username: admin
          displayName: Morpheus Admin
          email: admin@morpheusdata.com
          firstName: Morpheus
          lastName: Admin
          enabled: true
          receiveNotifications: true
          accountExpired: false
          accountLocked: false
          passwordExpired: false
          loginCount: 1822
          loginAttempts: 0
          lastLoginDate: 2020-06-30T15:58:28+0000
          roles:
            - id: 1
              authority: System Admin
              description: Super User
          account:
            id: 1
            name: root
          windowsUsername: morpheusadmin
          linuxUsername: morpheusadmin
          dateCreated: 2016-08-27T19:28:09+0000
          lastUpdated: 2020-06-30T15:58:28+0000
    ListUsersAvailableRoles:
      summary: List of available roles for a user
      value:
        roles:
          - id: 1
            authority: System Admin
            name: System Admin
            description: Super User
            roleType: null
            owner: null
    user:
      summary: User Response
      value:
        user:
          id: 127
          accountId: 3
          username: morpheusUser
          displayName: morpheusUser
          email: morpheusUser@morpheusdata.com
          firstName: Morpheus
          lastName: User
          enabled: true
          receiveNotifications: true
          isUsing2FA: false
          accountExpired: false
          accountLocked: false
          passwordExpired: false
          loginCount: 228
          loginAttempts: 0
          lastLoginDate: '2022-02-24T14:37:58Z'
          roles:
            - id: 294
              authority: Morpheus Engineer
              description: Morpheus Engineer
          account:
            id: 3
            name: Morpheus
          linuxUsername: morpheusUser
          linuxPassword: '************'
          linuxKeyPairId: null
          windowsUsername: morpheusUser
          windowsPassword: '************'
          defaultPersona: null
          dateCreated: '2018-08-06T13:22:13Z'
          lastUpdated: '2022-02-24T14:38:03Z'
        isMasterAccount: true
        permissions:
          - name: AppTemplate
            code: AppTemplate
            access: full
          - name: CatalogItemType
            code: CatalogItemType
            access: full
          - name: ComputeSite-full
            code: ComputeSite
            access: custom
          - name: ComputeZone-full
            code: ComputeZone
            access: full
          - name: InstanceType
            code: InstanceType
            access: custom
          - name: ReportTypes
            code: ReportTypes
            access: full
          - name: VdiPools
            code: VdiPools
            access: full
          - name: 'Operations: Usage'
            code: account-usage
            access: full
          - name: 'Operations: Activity'
            code: activity
            access: read
          - name: 'Admin: Tenant - Impersonate Users'
            code: admin-accounts-users
            access: full
          - name: 'Admin: Tenant'
            code: admin-accounts
            access: full
          - name: 'Admin: Appliance Settings'
            code: admin-appliance
            access: full
          - name: 'Admin: Backup Settings'
            code: admin-backupSettings
            access: full
          - name: 'Infrastructure: Certificates'
            code: admin-certificates
            access: full
          - name: 'Admin: Integrations'
            code: admin-cm
            access: full
          - name: 'Library: Instance Types'
            code: admin-containers
            access: full
          - name: 'Admin: Distributed Workers'
            code: admin-distributed-workers
            access: full
          - name: 'Admin: Environment Settings'
            code: admin-environments
            access: full
          - name: 'Admin: Policies'
            code: admin-global-policies
            access: full
          - name: 'Infrastructure: Groups'
            code: admin-groups
            access: full
          - name: 'Admin: Guidance Settings'
            code: admin-guidanceSettings
            access: full
          - name: 'Admin: Health'
            code: admin-health
            access: read
          - name: 'Admin: Identity Source'
            code: admin-identity-sources
            access: full
          - name: 'Infrastructure: Keypairs'
            code: admin-keypairs
            access: full
          - name: 'Admin: License Settings'
            code: admin-licenses
            access: full
          - name: 'Admin: Log Settings'
            code: admin-logSettings
            access: full
          - name: 'Admin: Monitoring Settings'
            code: admin-monitorSettings
            access: full
          - name: 'Admin: Message of the day'
            code: admin-motd
            access: full
          - name: 'Admin: Packages'
            code: admin-packages
            access: full
          - name: 'Admin: Plugins'
            code: admin-plugins
            access: full
          - name: 'Infrastructure: Policies'
            code: admin-policies
            access: full
          - name: 'Admin: Profiles'
            code: admin-profiles
            access: read
          - name: 'Admin: Provisioning Settings'
            code: admin-provisioningSettings
            access: full
          - name: 'Admin: Roles'
            code: admin-roles
            access: full
          - name: 'Infrastructure: Compute'
            code: admin-servers
            access: full
          - name: 'Admin: Service Plans'
            code: admin-servicePlans
            access: full
          - name: 'Admin: Users'
            code: admin-users
            access: full
          - name: 'Admin: Whitelabel Settings'
            code: admin-whitelabel
            access: full
          - name: 'Infrastructure: Clouds'
            code: admin-zones
            access: full
          - name: 'Library: App Blueprints'
            code: app-templates
            access: full
          - name: 'Provisioning: Apps'
            code: apps
            access: full
          - name: 'Library: Blueprints - ARM'
            code: arm-template
            access: full
          - name: 'Library: Integrations'
            code: automation-services
            access: full
          - name: 'Backups: Integrations'
            code: backup-services
            access: full
          - name: Backups
            code: backups
            access: full
          - name: 'API: Billing'
            code: billing
            access: full
          - name: 'Library: Catalog Items'
            code: catalog
            access: full
          - name: 'Library: Blueprints - CloudFormation'
            code: cloudFormation-template
            access: full
          - name: 'Provisioning: Code Repositories'
            code: code-repositories
            access: full
          - name: 'Infrastructure: Credentials'
            code: credentials
            access: full
          - name: Custom Instance Tab
            code: custom-instance-tab
            access: full
          - name: Custom Server Tab
            code: custom-server-tab
            access: full
          - name: 'Operations: Dashboard'
            code: dashboard
            access: read
          - name: DataDog Instance Tab
            code: datadog-instance-tab
            access: full
          - name: 'Provisioning: Code Integrations'
            code: deployment-services
            access: full
          - name: 'Provisioning: Code Deployments'
            code: deployments
            access: full
          - name: Example Catalog Layout
            code: example-catalog-view
            access: none
          - name: 'API: Execution Request'
            code: execution-request
            access: full
          - name: 'Provisioning: Executions'
            code: executions
            access: read
          - name: 'Operations: Guidance'
            code: guidance
            access: full
          - name: 'Library: Blueprints - Helm'
            code: helm-template
            access: full
          - name: 'Infrastructure: Boot'
            code: infrastructure-boot
            access: full
          - name: 'Infrastructure: Clusters'
            code: infrastructure-cluster
            access: full
          - name: 'Infrastructure: Network Router DHCP Pool'
            code: infrastructure-dhcp-pool
            access: full
          - name: 'Infrastructure: Network Domains'
            code: infrastructure-domains
            access: full
          - name: 'Infrastructure: Network IP Pools'
            code: infrastructure-ippools
            access: full
          - name: 'Infrastructure: Kubernetes Control'
            code: infrastructure-kube-cntl
            access: full
          - name: 'Infrastructure: Load Balancers'
            code: infrastructure-loadbalancer
            access: full
          - name: 'Infrastructure: Network Router NAT'
            code: infrastructure-nat
            access: full
          - name: 'Infrastructure: DHCP Relays'
            code: infrastructure-network-dhcp-relay
            access: full
          - name: 'Infrastructure: Network Static Routes'
            code: infrastructure-network-dhcp-routes
            access: full
          - name: 'Infrastructure: DHCP Servers'
            code: infrastructure-network-dhcp-server
            access: full
          - name: 'Infrastructure: Network Firewalls'
            code: infrastructure-network-firewalls
            access: full
          - name: 'Infrastructure: Network Integration'
            code: infrastructure-network-integrations
            access: full
          - name: 'Infrastructure: Network Router Firewalls'
            code: infrastructure-network-router-firewalls
            access: full
          - name: 'Infrastructure: Network Router Interfaces'
            code: infrastructure-network-router-interfaces
            access: full
          - name: 'Infrastructure: Network Router Redistribution'
            code: infrastructure-network-router-redistribution
            access: full
          - name: 'Infrastructure: Network Router Routes'
            code: infrastructure-network-router-routes
            access: full
          - name: 'Infrastructure: Network Server Groups'
            code: infrastructure-network-server-groups
            access: full
          - name: 'Infrastructure: Networks'
            code: infrastructure-networks
            access: full
          - name: 'Infrastructure: Network Proxies'
            code: infrastructure-proxies
            access: full
          - name: 'Infrastructure: Network Router DHCP Binding'
            code: infrastructure-router-dhcp-binding
            access: full
          - name: 'Infrastructure: Network Router DHCP Relay'
            code: infrastructure-router-dhcp-relay
            access: full
          - name: 'Infrastructure: Network Routers'
            code: infrastructure-routers
            access: full
          - name: 'Infrastructure: Security Groups'
            code: infrastructure-securityGroups
            access: full
          - name: 'Infrastructure: State'
            code: infrastructure-state
            access: full
          - name: 'Infrastructure: Storage Browser'
            code: infrastructure-storage-browser
            access: full
          - name: 'Infrastructure: Storage'
            code: infrastructure-storage
            access: full
          - name: 'Integrations: Ansible'
            code: integrations-ansible
            access: full
          - name: 'Provisioning: Job Executions'
            code: job-executions
            access: read
          - name: 'Provisioning: Jobs'
            code: job-templates
            access: full
          - name: 'Library: Blueprints - Kubernetes'
            code: kubernetes-template
            access: full
          - name: 'Provisioning: Advanced Node Type Options'
            code: library-advanced-node-type-options
            access: full
          - name: 'Library: Options'
            code: library-options
            access: full
          - name: 'Library: Templates'
            code: library-templates
            access: full
          - name: 'Monitoring: Logs'
            code: logs
            access: full
          - name: Monitoring
            code: monitoring
            access: full
          - name: 'Operations: Alarms'
            code: operations-alarms
            access: full
          - name: 'Operations: Approvals'
            code: operations-approvals
            access: full
          - name: 'Operations: Budgets'
            code: operations-budgets
            access: full
          - name: 'Operations: Invoices'
            code: operations-invoices
            access: full
          - name: 'Operations: Wiki'
            code: operations-wiki
            access: full
          - name: Projects
            code: projects
            access: full
          - name: Provisioning Administrator
            code: provisioning-admin
            access: full
          - name: 'Provisioning: Clone Instance'
            code: provisioning-clone
            access: full
          - name: 'Provisioning: Execute Script'
            code: provisioning-execute-script
            access: full
          - name: 'Provisioning: Execute Task'
            code: provisioning-execute-task
            access: full
          - name: 'Provisioning: Execute Workflow'
            code: provisioning-execute-workflow
            access: full
          - name: 'Provisioning: Allow Force Delete'
            code: provisioning-force-delete
            access: full
          - name: 'Provisioning: Import Image'
            code: provisioning-import-image
            access: full
          - name: Reconfigure Servers
            code: provisioning-reconfigure
            access: full
          - name: 'Provisioning: Instances'
            code: provisioning
            access: full
          - name: 'Operations: Analytics'
            code: reports-analytics
            access: full
          - name: 'Operations: Reports'
            code: reports
            access: full
          - name: 'Library: Scheduling - Execute'
            code: scheduling-execute
            access: full
          - name: 'Library: Scheduling - Power'
            code: scheduling-power
            access: full
          - name: 'Security: Scanning'
            code: security-scan
            access: full
          - name: 'Catalog: Dashboard'
            code: service-catalog-dashboard
            access: read
          - name: 'Catalog: Inventory'
            code: service-catalog-inventory
            access: full
          - name: Catalog
            code: service-catalog
            access: full
          - name: 'Tools: Archives'
            code: services-archives
            access: full
          - name: 'Tools: Cypher'
            code: services-cypher
            access: user
          - name: 'Tools: Image Builder'
            code: services-image-builder
            access: full
          - name: 'Tools: Kubernetes'
            code: services-kubernetes
            access: full
          - name: 'Provisioning: Service Mesh'
            code: services-network-registry
            access: full
          - name: 'VDI: Copy/Paste'
            code: services-vdi-copy
            access: full
          - name: 'Tools: VDI Pools'
            code: services-vdi-pools
            access: full
          - name: 'VDI: Local Printer'
            code: services-vdi-printer
            access: full
          - name: Snapshots
            code: snapshots
            access: full
          - name: 'Library: Tasks - Script Engines'
            code: task-scripts
            access: full
          - name: 'Library: Tasks'
            code: tasks
            access: full
          - name: 'Remote Console: Auto Login'
            code: terminal-access
            access: 'yes'
          - name: Remote Console
            code: terminal
            access: full
          - name: 'Library: Blueprints - Terraform'
            code: terraform-template
            access: full
          - name: 'Library: Thresholds'
            code: thresholds
            access: full
          - name: 'Infrastructure: Trust Integrations'
            code: trust-services
            access: full
          - name: 'Library: Virtual Images'
            code: virtual-images
            access: full
        appliance:
          buildVersion: 5.4.4
    accessToken:
      summary: Access Token Response
      value:
        access_token: e1d62c34-f7f5-4713-a874-31491e7707de
        refresh_token: 718cc628-b89f-43f5-bef7-f39887b47e68
        expires_in: 30463819
        token_type: bearer
        scope: write
security:
  - bearerAuth: []
externalDocs:
  url: https://docs.morpheusdata.com
tags:
  - name: Activity
    description: Manage Appliance Activity Logs
  - name: Alerts
    description: Manage Alerts
  - name: Appliance Settings
    description: Manage Appliance Settings
  - name: Approvals
    description: Manage Approvals
  - name: Apps
    description: Manage Apps
  - name: Archives
    description: Manage Archives
  - name: Authentication
    description: Manage Appliance Authentication
  - name: Automation
    description: Manage Tasks and Workflows
  - name: Backup Settings
    description: Manage Backup Settings
  - name: Billing
    description: Manage Billing
  - name: Blueprints
    description: Manage Blueprints
  - name: Budgets
    description: Manage Budgets
  - name: Checks
    description: Manage Monitoring Checks
  - name: Clouds
    description: Manage Clouds
  - name: Cluster Layouts
    description: Manage Cluster Layouts
  - name: Clusters
    description: Manage Kubernetes Clusters
  - name: Contacts
    description: Manage Monitoring Contacts
  - name: Cypher
    description: Manage Cypher
  - name: Dashboard
    description: View Dashboard Details
  - name: Deployments
    description: Manage File Deployments
  - name: Deploys
    description: Manage Deploys
  - name: Documentation
    description: >-
      View documentation for your [Morpheus Data](https://morpheusdata.com)
      appliance.
  - name: Environments
    description: Manage Environments
  - name: File Templates
    description: Manage File Templates
  - name: Groups
    description: Manage Groups
  - name: Guidance
    description: Manage Guidance Recommendations
  - name: Health
    description: View Appliance Health Statistics
  - name: History
    description: View History
  - name: Identity Sources
    description: Manage Identity Sources
  - name: Image Builds
    description: Manage Image Builds
  - name: Incidents
    description: Manage Ticket Incidents
  - name: Infrastructure
    description: Manage Infrastructure Settings
  - name: Inputs
    description: Manage Inputs (Option Types)
  - name: Instance Types
    description: Manage Instance Types
  - name: Instances
    description: Manage Instances
  - name: Integrations
    description: Manage Integrations
  - name: Invoices
    description: Manage Invoices
  - name: Jobs
    description: Manage Jobs
  - name: Key Pairs
    description: Manage Key Pairs
  - name: Layouts
    description: Manage Layouts
  - name: Library
    description: Manage Library
  - name: License
    description: Manage Appliance License
  - name: Load Balancers
    description: Manage Load Balancers
  - name: Log Settings
    description: Manage Log Settings
  - name: Logs
    description: View Logs
  - name: Monitoring
    description: Manage Monitoring
  - name: Networks
    description: Manage Networks
  - name: Node Types
    description: Manage Node/VM Types
  - name: Option Lists
    description: Manage Option Lists
  - name: Options
    description: Manage Options
  - name: Personas
    description: Manage Personas
  - name: Ping
    description: Ping Appliance
  - name: Policies
    description: Manage Policies
  - name: Price Sets
    description: Manage Price Sets
  - name: Prices
    description: Manage Prices
  - name: Projects
    description: Manage Projects
  - name: Provisioning
    description: Manage Provisioning
  - name: Provisioning Settings
    description: Manage Provisioning Settings
  - name: Provisioning Licenses
    description: Manage Provisioning Licenses
  - name: Reports
    description: Manage Reports
  - name: Roles
    description: Manage Roles (Authorities)
  - name: Scripts
    description: Manage Scripts
  - name: Search
    description: Global Search Functions
  - name: Security Groups
    description: Manage Security Groups
  - name: Self Service
    description: Manage Self Service
  - name: Servers
    description: Manage Servers (Hosts)
  - name: Service Catalog
    description: Manage Service Catalog
  - name: Service Plans
    description: Manage Service Plans
  - name: Setup
    description: Setup New Appliance
  - name: Spec Templates
    description: Manage Spec Templates
  - name: SSL Certificates
    description: Manage SSL Certificates
  - name: Storage
    description: Manage Storage
  - name: Tenants
    description: Manage Tenants (Accounts)
  - name: Tools
    description: Manage Tools
  - name: Usage
    description: View Usage
  - name: Users
    description: Manage Users
  - name: VDI Pools
    description: Manage VDI Pools
  - name: Virtual Desktop
    description: Manage Virtual Desktops
  - name: Virtual Images
    description: Manage Virtual Images
  - name: Whitelabel Settings
    description: Manage Whitelabelling
  - name: Wiki
    description: Manage Wiki
