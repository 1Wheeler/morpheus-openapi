openapi: 3.0.1
info:
  title: Morpheus API
  description: >-
    Morpheus is a powerful cloud management tool that provides provisioning,
    monitoring, logging, backups, and application deployment strategies.


    This document describes the Morpheus API protocol and the available
    endpoints. Sections are organized in the same manner as they appear in the
    Morpheus UI.
  version: 5.4.4
  termsOfService: https://morpheusdata.com/terms-and-conditions/
servers:
  - url: https://{serverFQDN}
    variables:
      serverFQDN:
        default: ''
paths:
  /api/dashboard:
    get:
      summary: Overview of Dashboard information
      operationId: getDashboard
      description: >
        This endpoint can be used to view dashboard information about the remote
        Morpheus appliance. This is an overview and summary of data available to
        the user that can be used to render a dashboard.
      externalDocs:
        url: https://apidocs.morpheusdata.com/#dashboard
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-dashboard'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Dashboard
  /api/forgot/reset-password:
    post:
      summary: Request a reset password email
      operationId: forgotPassword
      description: >
        This endpoint will trigger the Reset your password email to be sent to
        the specified user.


        The User is identified by `username` and, if they exist, will be
        notified via their configured email address. The email notification will
        indicate a Reset Password Request was made and it will include a token.


        Once you obtain the token from the email, it may be used to reset the
        password of your user.


        **Note**: This is an unauthorized endpoint and the response will always
        appear successful, it is not possible determine from the response
        whether the user exists or if an email was sent.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  description: >-
                    Specified as "username" or "tenantId\username" with proper
                    HTML encoding and used in conjunction with `password`.
                  type: string
              required:
                - username
      externalDocs:
        url: https://apidocs.morpheusdata.com/#forgot-password
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: >-
                      Reset password instructions have been sent to the user
                      'jsmith', if they exist.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Authentication
      security: []
  /api/forgot/send-email:
    post:
      summary: Reset user password
      operationId: resetPassword
      description: >
        This endpoint will reset the password for a user, updating it to the
        specified value. A secret token must be passed to identify the user who
        is being updated.


        **Note**: You can obtain this token by inspecting the URL of the “Click
        here to reset” link seen in the email.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  description: >-
                    The secret Reset Password token that was included in the
                    **Forgot Password Email**.
                  type: string
                password:
                  description: User new password. This is the new password for your user.
                  type: string
                  format: password
              required:
                - token
                - password
      externalDocs:
        url: https://apidocs.morpheusdata.com/#reset-password
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: Password has been updated and account unlocked
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Authentication
      security: []
  /api/ping:
    get:
      summary: Basic information about current Morpheus Installation
      description: >
        This endpoint can be used to check the remote appliance build version
        and some other basic information.


        This is an unsecured endpoint and does not require authorization.
        However, build version will not be returned unless you are authenticated
        with a valid access token.
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-ping'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Health
  /api/report-types:
    get:
      summary: This endpoint retrieves all available report types
      operationId: getAllReportTypes
      description: >
        This endpoint retrieves all available report types. A report type has
        optionTypes that define the parameters available when executing a report
        of that type. The sample response has been abbreviated.
      externalDocs:
        url: https://apidocs.morpheusdata.com/#get-all-report-types
      parameters:
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/phrase'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/code'
        - $ref: '#/components/parameters/category'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-reportTypes'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Reports
  /api/reports:
    get:
      summary: Returns all reports
      operationId: getAllReports
      description: >
        This endpoint returns all reports. This is results of reports that have
        been executed in the past.
      externalDocs:
        url: https://apidocs.morpheusdata.com/#get-all-reports
      parameters:
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/phrase'
        - $ref: '#/components/parameters/name'
        - name: reportType
          in: query
          description: >-
            If specified will return an exact match on report type code, accepts
            multiple values
          schema:
            type: string
        - $ref: '#/components/parameters/category'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-reports'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Reports
    post:
      summary: Run specified report
      operationId: runReport
      description: >
        This endpoint execute the specified report type and create a new report
        result.


        The available parameters vary by report type. Refer to the defined
        `inputs` for each report.
      consumes:
        - application/json
      parameters:
        - in: body
          name: Body
          required: true
          description: >-
            Wiki Page to Update.  Only the values you wish to update should be
            in the body payload.
          schema:
            type: object
            required:
              - type
            properties:
              report:
                type: object
                properties:
                  type:
                    type: string
                    example: appCost
                  startDate:
                    type: string
                    format: date
                    example: '2019-01-01'
                  endDate:
                    type: string
                    format: date
                    example: '2020-01-01'
                  groupId:
                    description: The Group ID filter for the report
                    type: number
                    example: 1
                  cloudId:
                    description: The Cloud ID filter for the report
                    type: number
                    example: 7
      externalDocs:
        url: https://apidocs.morpheusdata.com/#run-a-report
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-user'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Reports
  /api/reports/{id}:
    get:
      summary: This endpoint returns a specific report result
      operationId: getSpecificReport
      description: >
        This endpoint retrieves a specific report result. The response includes
        the result data as rows which can be used to render the report. Each
        report type will have sections for data and headers that vary by type,
        use Download a Specific Report to get the results organized by section.
      externalDocs:
        url: https://apidocs.morpheusdata.com/#get-all-reports
      parameters:
        - $ref: '#/components/parameters/id-path'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-reports'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Reports
    delete:
      summary: This endpoint will delete a report result
      operationId: deleteSpecificReport
      description: |
        This endpoint will delete a report result.
      externalDocs:
        url: https://apidocs.morpheusdata.com/#delete-a-report
      parameters:
        - $ref: '#/components/parameters/id-path'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-success'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Reports
  /api/reports/download/{id}{format}:
    get:
      summary: Downloads a specific report result as a file attachment
      operationId: downloadSpecificReport
      description: >
        This endpoint downloads a specific report result as a file attachment.
        The default file format is `.json`.
      externalDocs:
        url: https://apidocs.morpheusdata.com/#download-a-specific-report
      parameters:
        - $ref: '#/components/parameters/id-path'
        - $ref: '#/components/parameters/format-path'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-success'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Reports
  /api/search:
    get:
      summary: Provides global search for all types of objects
      description: >
        This endpoint provides global search for all types of objects, with the
        results sorted in order of relevance.


        The `phrase` parameter can be specified as part of the URL or as a query
        parameter. If phrase is not specified, then 0 results (hits) will be
        returned.
      externalDocs:
        url: https://apidocs.morpheusdata.com/#search
      parameters:
        - $ref: '#/components/parameters/max'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/phrase'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-search'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Search
  /api/whoami:
    get:
      summary: Retrieves information about current user roles and permissions
      operationId: whoami
      description: >
        Provides API to retrieve information about yourself, including your
        roles and permissions.


        The appliance build version is also returned.
      externalDocs:
        url: https://apidocs.morpheusdata.com/#whoami
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-user'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Authentication
        - Users
  /api/wiki/categories:
    get:
      summary: Retrieves all Wiki categories associated with the account
      operationId: getWikiCategories
      description: >
        This endpoint retrieves all Wiki categories associated with the account.
        The results are not paginated. The categories returned are those of the
        found pages.
      externalDocs:
        url: https://apidocs.morpheusdata.com/#get-all-wiki-categories
      parameters:
        - $ref: '#/components/parameters/phrase'
        - $ref: '#/components/parameters/pagePhrase'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-wikiCategories'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Wiki
  /api/wiki/pages:
    get:
      summary: Retrieves wiki pages associated with the account.
      operationId: getAllWiki
      description: |
        This endpoint retrieves wiki pages associated with the account.
      externalDocs:
        url: https://apidocs.morpheusdata.com/#get-all-wiki-pages
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/phrase'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-wiki'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Wiki
    post:
      summary: Create a Wiki Page
      operationId: createWikiPage
      consumes:
        - application/json
      parameters:
        - in: body
          name: Body
          required: true
          description: Wiki Page to Create
          schema:
            type: object
            required:
              - name
              - category
              - content
            properties:
              page:
                type: object
                properties:
                  name:
                    type: string
                    example: Sample Doc
                  category:
                    type: string
                    example: info
                  content:
                    type: string
                    example: A sample document in **markdown**.
      description: |
        Creates a Wiki Page
      externalDocs:
        url: https://apidocs.morpheusdata.com/#create-a-wiki-page
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-wikiCreatePage'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Wiki
  /api/wiki/pages/{id}:
    get:
      summary: Retrieves wiki a specific Wiki page
      operationId: getWikiSpecificPage
      description: |
        This endpoint retrieves a specific wiki page.
      externalDocs:
        url: https://apidocs.morpheusdata.com/#get-a-specific-wiki-page
      parameters:
        - $ref: '#/components/parameters/id-path'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-wikiSpecificPage'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Wiki
    put:
      summary: Update a Wiki Page
      operationId: updateWikiPage
      description: |
        Updates a Wiki Page
      consumes:
        - application/json
      parameters:
        - $ref: '#/components/parameters/id-path'
        - in: body
          name: Body
          required: true
          description: >-
            Wiki Page to Update.  Only the values you wish to update should be
            in the body payload.
          schema:
            type: object
            properties:
              page:
                type: object
                properties:
                  name:
                    type: string
                    example: Sample Doc
                  category:
                    type: string
                    example: info
                  content:
                    type: string
                    example: A sample document in **markdown**.
      externalDocs:
        url: https://apidocs.morpheusdata.com/#update-a-wiki-page
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-wikiCreatePage'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Wiki
  /oauth/token:
    post:
      summary: Provides authentication via username and password
      operationId: getAccessToken
      description: >
        This endpoint provides authentication via `username` and `password` of a
        Morpheus User. The response includes a valid access token. If your
        current token is expired, a new one will be created and returned.


        Subtenant users will need to pass their subdomain prefix like
        subdomain\username. The default subdomain is the tenant account ID.


        This endpoint also allows refreshing your current access token to get a
        new token. This is done by passing your current `refresh_token`. This
        provides a way to renew your client’s session with the API, and extend
        the expiration date.


        This will render your current access token invalid, so you will need to
        update any scripts relying on it.
      parameters:
        - name: client_id
          required: true
          in: query
          description: >-
            Client ID, use morph-api. Users may only have one access token per
            Client ID. The CLI uses morph-cli.
          schema:
            type: string
            enum:
              - morph-api
        - name: grant_type
          required: true
          in: query
          description: OAuth Grant Type, use password.
          schema:
            type: string
            enum:
              - password
              - refresh_token
        - name: scope
          required: true
          in: query
          description: OAuth token scope, use write.
          schema:
            type: string
            enum:
              - write
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  description: >-
                    Specified as "username" or "tenantId\username" with proper
                    HTML encoding and used in conjunction with `password`. Not
                    utilized with `refresh_token`.
                  type: string
                password:
                  description: >-
                    The Password for defined `username`. Must have proper HTML
                    encoding
                  type: string
                  format: password
                refresh_token:
                  description: >-
                    The `refresh_token` value from a previous API generation can
                    be utilized instead of `username` and `password`.
      externalDocs:
        url: https://apidocs.morpheusdata.com/#get-access-token
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-accessToken'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Object Not Found.
        '500':
          description: Internal Server Error.
        '503':
          description: Service Unavailable.
      tags:
        - Authentication
      security: []
components:
  securitySchemes:
    bearerAuth:
      description: Populate a bearer token for the Morpheus appliance you are testing
      type: http
      scheme: bearer
  schemas:
    200-dashboard:
      title: 200 Dashboard
      type: object
      properties:
        success:
          type: boolean
        monitoring:
          type: object
          properties:
            avgHealth:
              type: number
              example: 8.3333333333
            avgResponseTime:
              type: number
              example: 22.3333333333
            warningApps:
              type: number
              example: 0
            warningChecks:
              type: number
              example: 0
            failApps:
              type: number
              example: 0
            totalApps:
              type: number
              example: 2
            failChecks:
              type: number
              example: 1
            successApps:
              type: number
              example: 2
            mutedApps:
              type: number
              example: 0
            successChecks:
              type: number
              example: 5
            totalChecks:
              type: number
              example: 6
            mutedChecks:
              type: number
              example: 0
            responseTimes:
              type: array
              items:
                type: number
                example: 0
            allSuccess:
              type: boolean
            openIncidents:
              type: number
              example: 0
        provisioning:
          type: object
          properties:
            instanceCount:
              type: number
              example: 3
            favoriteInstances:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: number
                    example: 319
                  accountId:
                    type: number
                    example: 1
                  instanceType:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 6
                      code:
                        type: string
                        example: apache
                      category:
                        type: string
                        example: web
                      name:
                        type: string
                        example: Apache
                  zones:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          example: 40
                        accountId:
                          type: number
                          example: 1
                        groups:
                          type: array
                          items:
                            type: number
                            example: 1
                        name:
                          type: string
                          example: qa-azure2
                        description:
                          type: string
                          format: nullable
                        location:
                          type: string
                          format: nullable
                        visibility:
                          type: string
                          example: private
                        zoneTypeId:
                          type: number
                          example: 9
                  layout:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1292
                      code:
                        type: string
                        example: apache-azure-2.4-ubuntu-16.04-single
                      name:
                        type: string
                        example: Azure Apache
                      description:
                        type: string
                        example: >-
                          This will provision a single process with no
                          redundancy
                      sortOrder:
                        type: number
                        example: 10
                  plan:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Basic_A0 (1 Core 0.75GB Memory) (westus)
                      id:
                        type: number
                        example: 187
                      code:
                        type: string
                        example: azure.plan.westus.Basic_A0
                  name:
                    type: string
                    example: test-azureapache1
                  displayName:
                    type: string
                    example: test-azureapache1
                  description:
                    type: string
                    format: nullable
                  dateCreated:
                    type: string
                    format: date-time
                    example: '2019-09-18T16:07:47Z'
                  lastUpdated:
                    type: string
                    format: date-time
                    example: '2019-10-25T09:12:29Z'
                  status:
                    type: string
                    example: unknown
                  containerIds:
                    type: array
                    items:
                      type: number
                      example: 317
                  containers:
                    type: array
                    items:
                      type: object
                      properties:
                        ip:
                          type: string
                          example: 0.0.0.0
                        port:
                          type: object
                          properties:
                            id:
                              type: number
                              example: 19
                            exportName:
                              type: string
                              example: HTTP
                            container:
                              type: object
                              properties:
                                id:
                                  type: number
                                  example: 317
                            loadBalancerInstance:
                              type: string
                              format: nullable
                            primaryPort:
                              type: boolean
                            loadBalanceProtocol:
                              type: string
                              format: nullable
                            linkPort:
                              type: boolean
                            internalPort:
                              type: number
                              example: 80
                            export:
                              type: boolean
                            portType:
                              type: object
                              properties:
                                id:
                                  type: number
                                  example: 8
                            displayName:
                              type: string
                              example: Http
                            protocol:
                              type: string
                              example: http
                            portIndex:
                              type: number
                              example: 0
                            externalIp:
                              type: string
                              format: nullable
                            externalPort:
                              type: number
                              example: 80
                            internalIp:
                              type: string
                              format: nullable
                            visible:
                              type: boolean
                            loadBalance:
                              type: boolean
                  version:
                    type: string
                    example: 2.4
                  environmentPrefix:
                    type: string
                    format: nullable
        instanceStats:
          type: object
          properties:
            usedMemory:
              type: number
              example: 479804000
            maxMemory:
              type: number
              example: 1771446368
            usedStorage:
              type: number
              example: 6202490880
            maxStorage:
              type: number
              example: 55530786816
            running:
              type: number
              example: 2
            total:
              type: number
              example: 3
            totalContainers:
              type: number
              example: 4
        backups:
          type: object
          properties:
            accountStats:
              type: object
              properties:
                totalSizeByDay:
                  type: array
                  items:
                    type: number
                    example: 0
                totalSizeByDay7Days:
                  type: array
                  items:
                    type: number
                    example: 0
                formattedTotalSize:
                  type: object
                  properties:
                    value:
                      type: string
                      example: 0
                    units:
                      type: string
                      example: KB
                backupCount:
                  type: number
                  example: 3
                totalSize:
                  type: number
                  example: 0
                success:
                  type: number
                  example: 0
                failed:
                  type: number
                  example: 0
                totalCompleted:
                  type: number
                  example: 0
                avgSize:
                  type: number
                  example: 0
                failedRate:
                  type: number
                  example: 0
                successRate:
                  type: number
                  example: 0
                nextFireTotal:
                  type: number
                  example: 1
                backupDayCount:
                  type: array
                  items:
                    type: number
                    example: 0
                backupDayCountTotal:
                  type: number
                  example: 0
        activity:
          type: array
          items:
            type: object
            properties:
              success:
                type: boolean
              name:
                type: string
                example: dev-appliance
              message:
                type: string
                example: Check successfully been created.
              ts:
                type: string
                format: date-time
                example: '2019-10-22T00:06:20Z'
              activityType:
                type: string
                example: Monitoring
              accountId:
                type: number
                example: 1
              userId:
                type: number
                example: 1
              userName:
                type: string
                example: admin
              objectId:
                type: number
                example: 238
              objectType:
                type: string
                example: MonitorCheck
              _id:
                type: string
                example: 0276e1fc-214d-4cb3-bcf4-9ebda0b26542
              timestamp:
                type: string
                format: date-time
                example: '2019-10-22T00:06:20Z'
    200-ping:
      title: 200 Ping
      type: object
      properties:
        success:
          type: boolean
          example: true
        buildVersion:
          type: string
          example: 5.4.4
    200-reportTypes:
      title: 200 Report Types
      type: object
      properties:
        reportTypes:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                example: 95
              code:
                type: string
                example: amazonReservationCoverage
              name:
                type: string
                example: Amazon Reservation Coverage
              description:
                type: string
                example: >-
                  View how Amazon EC2 instance types are covered by Reserved
                  Instances.
              category:
                type: string
                example: cost
              visible:
                type: boolean
              masterOnly:
                type: boolean
              ownerOnly:
                type: boolean
              supportsAllZoneTypes:
                type: boolean
              isPlugin:
                type: string
                format: nullable
              dateCreated:
                type: string
                format: date-time
                example: '2020-09-02T19:35:18Z'
              optionTypes:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      example: 2748
                    name:
                      type: string
                      example: endDate
                    description:
                      type: string
                      format: nullable
                    code:
                      type: string
                      example: reportType.endDate
                    fieldName:
                      type: string
                      example: endDate
                    fieldLabel:
                      type: string
                      example: End Date
                    fieldCode:
                      type: string
                      example: gomorpheus.optiontype.EndDate
                    fieldContext:
                      type: string
                      example: config
                    fieldGroup:
                      type: string
                      format: nullable
                    fieldClass:
                      type: string
                      format: nullable
                    fieldAddOn:
                      type: string
                      format: nullable
                    fieldComponent:
                      type: string
                      format: nullable
                    fieldInput:
                      type: string
                      format: nullable
                    placeHolder:
                      type: string
                      format: nullable
                    verifyPattern:
                      type: string
                      format: nullable
                    helpBlock:
                      type: string
                      example: null
                    helpBlockFieldCode:
                      type: string
                      format: nullable
                    defaultValue:
                      type: string
                      format: nullable
                    optionSource:
                      type: string
                      format: nullable
                    optionSourceType:
                      type: string
                      format: nullable
                    optionList:
                      type: string
                      format: nullable
                    type:
                      type: string
                      example: text
                    advanced:
                      type: boolean
                    required:
                      type: boolean
                    exportMeta:
                      type: boolean
                    editable:
                      type: boolean
                    creatable:
                      type: boolean
                    config:
                      type: object
                      properties: null
                    displayOrder:
                      type: number
                      example: 2
                    wrapperClass:
                      type: string
                      format: nullable
                    enabled:
                      type: boolean
                    noBlank:
                      type: boolean
                    dependsOnCode:
                      type: string
                      format: nullable
                    visibleOnCode:
                      type: string
                      format: nullable
                    requireOnCode:
                      type: string
                      format: nullable
                    contextualDefault:
                      type: boolean
                    displayValueOnDetails:
                      type: string
                      format: nullable
                    showOnCreate:
                      type: string
                      format: nullable
                    showOnEdit:
                      type: string
                      format: nullable
              supportedZoneTypes:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      example: 31
                    code:
                      type: string
                      example: amazon
                    name:
                      type: string
                      example: Amazon
        meta:
          type: object
          properties:
            size:
              type: number
              example: 25
            total:
              type: number
              example: 30
            offset:
              type: number
              example: 0
            max:
              type: number
              example: 25
    200-reports:
      title: 200 Reports
      type: object
      properties:
        reportResults:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int32
                example: 2
              type:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 21
                  code:
                    type: string
                    example: appCost
                  name:
                    type: string
                    example: Application Cost
              reportTitle:
                type: string
                example: Application Cost Jun 04 2019 19:28:02
              filterTitle:
                type: string
                example: Jun 04 2019
              status:
                type: string
                example: ready
              dateCreated:
                type: string
                example: 2019-06-04T23:28:02+0000
              lastUpdated:
                type: string
                example: 2019-06-04T23:28:02+0000
              startDate:
                type: string
                format: nullable
              endDate:
                type: string
                format: nullable
              config:
                type: object
                properties:
                  type:
                    type: string
                    example: appCost
              createdBy:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    example: 1
                  username:
                    type: string
                    example: root
        meta:
          type: object
          properties:
            size:
              type: integer
              format: int32
              example: 2
            total:
              type: integer
              format: int32
              example: 2
            offset:
              type: integer
              format: int32
              example: 0
            max:
              type: integer
              format: int32
              example: 25
    200-user:
      title: 200 User
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: number
            accountId:
              type: number
            username:
              type: string
            displayName:
              type: string
            email:
              type: string
            firstName:
              type: string
            lastName:
              type: string
            enabled:
              type: boolean
            receiveNotifications:
              type: boolean
            isUsing2FA:
              type: boolean
            accountExpired:
              type: boolean
            accountLocked:
              type: boolean
            passwordExpired:
              type: boolean
            loginCount:
              type: number
            loginAttempts:
              type: number
            lastLoginDate:
              type: string
            roles:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: number
                  authority:
                    type: string
                  description:
                    type: string
            account:
              type: object
              properties:
                id:
                  type: number
                name:
                  type: string
            linuxUsername:
              type: string
            linuxPassword:
              type: string
            linuxKeyPairId:
              type: object
              properties:
                id:
                  type: number
            windowsUsername:
              type: string
            windowsPassword:
              type: string
            defaultPersona:
              type: object
              properties:
                id:
                  type: number
                code:
                  type: string
                name:
                  type: string
            dateCreated:
              type: string
            lastUpdated:
              type: string
            isMasterAccount:
              type: boolean
            permissions:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  code:
                    type: string
                  access:
                    type: string
            appliance:
              type: object
              properties:
                buildVersion:
                  type: string
    200-success:
      title: 200 Success
      type: object
      properties:
        success:
          type: boolean
    200-search:
      title: 200 Search
      type: object
      properties:
        hits:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: 18157
              uuid:
                type: string
                example: 4e33c2ef-5b70-45c0-9700-939e3162e42b
              name:
                type: string
                example: EC2Instance
              description:
                type: string
                format: nullable
              type:
                type: string
                example: Instance
              dateCreated:
                type: string
                format: date-time
                example: '2022-02-22T19:49:28Z'
              score:
                type: number
                example: 20
        query:
          type: string
          example: ec2
        took:
          type: number
          example: 3249
        meta:
          type: object
          properties:
            offset:
              type: number
              example: 0
            max:
              type: number
              example: 25
            size:
              type: number
              example: 3
            total:
              type: number
              example: 3
    200-wikiCategories:
      title: 200 Wiki Categories
      type: object
      properties:
        categories:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: apps
              pageCount:
                type: number
                example: 1
    200-wiki:
      title: 200 Wiki
      type: object
      properties:
        pages:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                example: 1
              name:
                type: string
                example: Home
              urlName:
                type: string
                example: home
              category:
                type: string
                format: nullable
              refId:
                type: string
                format: nullable
              refType:
                type: string
                format: nullable
              format:
                type: string
                example: markdown
              content:
                type: string
                example: Welcome to the home page for this Morpheus wiki.
              createdBy:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  username:
                    type: string
                    example: admin
              updatedBy:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  username:
                    type: string
                    example: admin
              dateCreated:
                type: string
                example: 2019-06-27T16:55:59+0000
              lastUpdated:
                type: string
                example: 2019-06-27T16:55:59+0000
        meta:
          type: object
          properties:
            size:
              type: number
              example: 2
            total:
              type: number
              example: 2
            max:
              type: number
              example: 25
            offset:
              type: number
              example: 0
    200-wikiCreatePage:
      title: 200 Wiki Create Page
      type: object
      properties:
        page:
          type: object
          properties:
            id:
              type: number
              example: 934
            name:
              type: string
              example: Sample Doc
            urlName:
              type: string
              example: info/sample-doc
            category:
              type: string
              example: info
            refId:
              type: string
              format: nullable
            refType:
              type: string
              format: nullable
            format:
              type: string
              example: markdown
            content:
              type: string
              example: A sample document in **markdown**.
            createdBy:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                username:
                  type: string
                  example: Admin
            updatedBy:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                username:
                  type: string
                  example: Admin
            dateCreated:
              type: string
              format: date-time
              example: '2022-02-24T21:34:20Z'
            lastUpdated:
              type: string
              format: date-time
              example: '2022-02-24T21:34:20Z'
        success:
          type: boolean
    200-wikiSpecificPage:
      title: 200 Wiki Page
      type: object
      properties:
        page:
          type: object
          properties:
            id:
              type: number
              example: 934
            name:
              type: string
              example: Sample Doc
            urlName:
              type: string
              example: info/sample-doc
            category:
              type: string
              example: info
            refId:
              type: string
              format: nullable
            refType:
              type: string
              format: nullable
            format:
              type: string
              example: markdown
            content:
              type: string
              example: An updated sample document in **markdown**. Cheers!
            createdBy:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                username:
                  type: string
                  example: Admin
            updatedBy:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                username:
                  type: string
                  example: Admin
            dateCreated:
              type: string
              format: date-time
              example: '2022-02-24T21:34:20Z'
            lastUpdated:
              type: string
              format: date-time
              example: '2022-02-24T21:43:54Z'
    200-accessToken:
      title: 200 Access Token
      type: object
      properties:
        access_token:
          type: string
          example: e1d62c34-f7f5-4713-a874-31491e7707de
        refresh_token:
          type: string
          example: 718cc628-b89f-43f5-bef7-f39887b47e68
        expires_in:
          type: number
          example: 30463819
        token_type:
          type: string
          example: bearer
        scope:
          type: string
          example: write
  parameters:
    max:
      name: max
      in: query
      description: Maximum number of returned objects
      schema:
        type: number
        default: 25
    offset:
      name: offset
      in: query
      description: Offset of records you want to load
      schema:
        type: number
        default: 0
    sort:
      name: sort
      in: query
      description: Sort order
      schema:
        type: string
        default: name
    direction:
      name: direction
      in: query
      description: Sort direction, use 'desc' to reverse sort
      schema:
        type: string
        default: asc
    phrase:
      name: phrase
      in: query
      description: If specified will return a partial match on name
      schema:
        type: string
    name:
      name: name
      in: query
      description: If specified will return an exact match on name
      schema:
        type: string
    code:
      name: code
      in: query
      description: If specified will return an exact match on code
      schema:
        type: string
    category:
      name: category
      in: query
      description: If specified will return an exact match on category
      schema:
        type: string
    id-path:
      name: id
      in: path
      description: Morpheus ID of the Object being created or referenced
      required: true
      schema:
        type: number
    format-path:
      name: format
      in: path
      required: true
      description: Format of the rendered report file, `.json` or `.csv`.
      schema:
        type: string
        default: .json
        enum:
          - .json
          - .csv
    query:
      name: query
      in: query
      description: Alias for phrase
      schema:
        type: string
    pagePhrase:
      name: pagePhrase
      in: query
      description: If specified will return a partial match on page name
      schema:
        type: string
security:
  - bearerAuth: []
externalDocs:
  url: https://docs.morpheusdata.com
tags:
  - name: Introduction
  - name: Activity
  - name: Alerts
  - name: Appliance Settings
  - name: Approvals
  - name: Apps
  - name: Archives
  - name: Authentication
  - name: Automation
  - name: Backup Settings
  - name: Billing
  - name: Blueprints
  - name: Budgets
  - name: Checks
  - name: Clouds
  - name: Cluster Layouts
  - name: Clusters
  - name: Contacts
  - name: Cypher
  - name: Dashboard
  - name: Deployments
  - name: Deploys
  - name: Environments
  - name: File Templates
  - name: Groups
  - name: Guidance
  - name: Health
  - name: History
  - name: Identity Sources
  - name: Image Builds
  - name: Incidents
  - name: Infrastructure
  - name: Inputs
  - name: Instance Types
  - name: Instances
  - name: Integrations
  - name: Invoices
  - name: Jobs
  - name: Key Pairs
  - name: Layouts
  - name: Library
  - name: License
  - name: Load Balancers
  - name: Log Settings
  - name: Logs
  - name: Monitoring
  - name: Networks
  - name: Node Types
  - name: Option Lists
  - name: Options
  - name: Personas
  - name: Policies
  - name: Price Sets
  - name: Prices
  - name: Projects
  - name: Provisioning
  - name: Provisioning Settings
  - name: Provisioning Licenses
  - name: Reports
  - name: Roles
  - name: Scripts
  - name: Search
  - name: Security Groups
  - name: Self Service
  - name: Servers
  - name: Service Catalog
  - name: Service Plans
  - name: Setup
  - name: Spec Templates
  - name: SSL Certificates
  - name: Storage
  - name: Tenants
  - name: Tools
  - name: Usage
  - name: Users
  - name: VDI Pools
  - name: Virtual Desktop
  - name: Virtual Images
  - name: Whitelabel Settings
  - name: Wiki
